---
# ==================================================================================================
#
# Bedroom 1 Light Configuration
#
# Lights:
#   light.mf1_bedroom1_cf1_bulb1
#   light.mf1_bedroom1_lamp1_bulb1
#   light.mf1_bedroom1_lamp1_bulb2
#   light.mf1_bedroom1_lamp2_bulb1
#   light.mf1_bedroom1_lamp2_bulb2
#
# Light Groups:
#   - light.mf1_bedroom1
#   - light.mf1_bedroom1_cf1
#   - light.mf1_bedroom1_lamp1
#   - light.mf1_bedroom1_lamp2
#
# ==================================================================================================
adaptive_lighting:
  - name: "MF1: Bedroom1 CF1"
    lights: []
    initial_transition: 1
    min_color_temp: 2000
    max_color_temp: 6500

  - name: "MF1: Bedroom1 Lamp1"
    lights: []
    initial_transition: 1
    min_color_temp: 2000
    max_color_temp: 6500

  - name: "MF1: Bedroom1 Lamp2"
    lights:
      - light.mf1_bedroom1_lamp2
    initial_transition: 1
    min_color_temp: 2000
    max_color_temp: 6500

# ==================================================================================================
#
# Automations
#
#
#
# ==================================================================================================
automation:
  # ================================================================================================
  #
  # Whole Room
  #
  # ================================================================================================
  - id: "ff2d7e29-a81d-4949-9bd9-d876376d5ea1"
    alias: "MF1: Bedroom1  - Adaptive Lighting (Toggle)"
    trigger:
      - platform: state
        entity_id: binary_sensor.mf1_bedroom1_color_mode
    variables:
      adaptive_mode: "{{ iif(is_state('binary_sensor.mf1_bedroom1_color_mode','on'), 'off','on') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ adaptive_mode }}"
        data:
          entity_id:
            - switch.mf1_bedroom1_cf1_adaptive_lighting
            - switch.mf1_bedroom1_lamp1_adaptive_lighting
            - switch.mf1_bedroom1_lamp2_adaptive_lighting
    mode: single

  # ================================================================================================
  #
  # CF 1 Automations
  #
  # ================================================================================================
  - id: ""
    alias: "MF1: Bedroom1 CF1 - Adaptive Lighting (Toggle Brightness Adjustment)"
    description: ""
    trigger:
      - platform: state
        entity_id: input_select.light_mode
        to: "Circadian"
      - platform: state
        entity_id: binary_sensor.mf1_bedroom1_cf1_autobrightness
        not_from:
          - "unknown"
          - "unavailable"
        not_to:
          - "unknown"
          - "unavailable"
    variables:
      brightness_mode: "{{ states('binary_sensor.mf1_bedroom1_cf1_autobrightness') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ brightness_mode }}"
        data:
          entity_id:
            - switch.mf1_bedroom1_cf1_adaptive_lighting_brightness

  - id: "7568a0dc-50c1-4478-979f-4fa1411cfd60"
    alias: "MF1: Bedroom1 CF1 - Adaptive Lighting (Turn Off Brightness Adjustment)"
    description: ""
    trigger:
        - platform: event
          event_type: hue_event
          event_data:
            id: mf1_bedroom1_cf1_switch_button
            subtype: 3
        - platform: event
          event_type: hue_event
          event_data:
            id: mf1_bedroom1_cf1_switch_button
            subtype: 2
    condition: []
    action:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.mf1_bedroom1_cf1_adaptive_lighting_brightness
    mode: single

  - id: "5c6b112c-e978-44c1-91be-357857fd37dd"
    alias: "MF1: Bedroom1 CF1 - Adaptive Lighting (Toggle Color Adjustment)"
    trigger:
      - platform: state
        entity_id: input_select.light_mode
        to: "Circadian"
      - platform: state
        entity_id: binary_sensor.mf1_bedroom1_cf1_autocolor
        not_from:
          - "unknown"
          - "unavailable"
        not_to:
          - "unknown"
          - "unavailable"
    variables:
      brightness_mode: "{{ states('binary_sensor.mf1_bedroom1_cf1_autocolor') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ brightness_mode }}"
        data:
          entity_id:
            - switch.mf1_bedroom1_cf1_adaptive_lighting_color
    mode: single

  - id: "7f87e8e1-806c-4c79-bd09-ddfcc269ada7"
    alias: "MF1: Bedroom1 CF1 - Adaptive Lighting (Turn Off Color Adjustment)"
    description: ""
    trigger:
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 4
            type: "long_release"
    condition: []
    action:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
            - switch.mf1_bedroom1_cf1_adaptive_lighting_color
    mode: single

  - id: "24dd052e-9bc2-436b-97a8-63028b2b611e"
    alias: "MF1: Bedroom1 CF1 - Green Has Been On"
    description: ""
    trigger:
      - platform: state
        entity_id: light.mf1_bedroom1_cf1
        attribute: xy_color
        to: (0.23, 0.698)
    condition: []
    action:
      - entity_id: input_boolean.mf1_bedroom1_cf1_green_event
        service: input_boolean.turn_on
      - entity_id: input_boolean.special_migraine_mode
        service: input_boolean.turn_on
    mode: single

  - id: "7fcb3301-b548-4375-ab04-515dbb1db5c5"
    alias: "MF1: Bedroom1 CF1 - Turn off Green tracker"
    description: ""
    trigger:
      - at: "04:00"
        platform: time
    condition: []
    action:
      - entity_id: input_boolean.mf1_bedroom1_cf1_green_event
        service: input_boolean.turn_off
    mode: single

  # ================================================================================================
  #
  # Lamp 1 Automations
  #
  # ================================================================================================
  - id: "f9c73d20-47d4-40d4-9292-f6d8e07e5600"
    alias: "MF1: Bedroom1 Lamp1 - Adaptive Lighting (Toggle Brightness Adjustment)"
    description: ""
    trigger:
      - platform: state
        entity_id: input_select.light_mode
        to: "Circadian"
      - platform: state
        entity_id: binary_sensor.mf1_bedroom1_lamp1_autobrightness
        not_from:
          - "unknown"
          - "unavailable"
        not_to:
          - "unknown"
          - "unavailable"
    variables:
      brightness_mode: "{{ states('binary_sensor.mf1_bedroom1_lamp1_autobrightness') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ brightness_mode }}"
        data:
          entity_id:
            - switch.mf1_bedroom1_lamp1_adaptive_lighting_brightness

  - id: "ab85e3af-0d30-4f26-baaa-0960fdfb5a35"
    alias: "MF1: Bedroom1 Lamp1 - Adaptive Lighting (Turn Off Brightness Adjustment)"
    description: ""
    trigger:
        - platform: event
          event_type: hue_event
          event_data:
            id: mf1_bedroom1_lamp1_switch_button
            subtype: 3
        - platform: event
          event_type: hue_event
          event_data:
            id: mf1_bedroom1_lamp1_switch_button
            subtype: 2
    condition: []
    action:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.mf1_bedroom1_lamp1_adaptive_lighting_brightness
    mode: single

  - id: "0da1744b-772f-4d8e-8f44-d46f3525a7df"
    alias: "MF1: Bedroom1 LAMP1 - Adaptive Lighting (Toggle Color Adjustment)"
    trigger:
      - platform: state
        entity_id: input_select.light_mode
        to: "Circadian"
      - platform: state
        entity_id: binary_sensor.mf1_bedroom1_lamp1_autocolor
        not_from:
          - "unknown"
          - "unavailable"
        not_to:
          - "unknown"
          - "unavailable"
    variables:
      brightness_mode: "{{ states('binary_sensor.mf1_bedroom1_lamp1_autocolor') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ brightness_mode }}"
        data:
          entity_id:
            - switch.mf1_bedroom1_lamp1_adaptive_lighting_color
    mode: single

  - id: "e37668ec-151e-426d-aecf-06d2db29c4bd"
    alias: "MF1: Bedroom1 LAMP1 - Adaptive Lighting (Turn Off Color Adjustment)"
    description: ""
    trigger:
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 4
            type: "long_release"
    condition: []
    action:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
            - switch.mf1_bedroom1_lamp1_adaptive_lighting_color
    mode: single

  - id: "c9a3c389-9165-4cca-9648-ed3739f0365b"
    alias: "MF1: Bedroom1 LAMP1 - Green Has Been On"
    description: ""
    trigger:
      - platform: state
        entity_id: light.mf1_bedroom1_lamp1
        attribute: xy_color
        to: (0.23, 0.698)
    condition: []
    action:
      - entity_id: input_boolean.mf1_bedroom1_lamp1_green_event
        service: input_boolean.turn_on
      - entity_id: input_boolean.special_migraine_mode
        service: input_boolean.turn_on
    mode: single

  - id: "dff9accd-77ad-4b6a-9751-6aa9b631ce19"
    alias: "MF1: Bedroom1 LAMP1 - Turn off Green tracker"
    description: ""
    trigger:
      - at: "04:00"
        platform: time
    condition: []
    action:
      - entity_id: input_boolean.mf1_bedroom1_lamp1_green_event
        service: input_boolean.turn_off
    mode: single

  # ================================================================================================
  #
  # Lamp 2 Automations
  #
  # ================================================================================================
  - id: "848efd5b-0d62-496b-8da2-ff2beb51155c"
    alias: "MF1: Bedroom1 Lamp2 - Adaptive Lighting (Toggle Brightness Adjustment)"
    description: ""
    trigger:
      - platform: state
        entity_id: input_select.light_mode
        to: "Circadian"
      - platform: state
        entity_id: binary_sensor.mf1_bedroom1_lamp2_autobrightness
    variables:
      brightness_mode: "{{ states('binary_sensor.mf1_bedroom1_lamp2_autobrightness') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ brightness_mode }}"
        data:
          entity_id:
            - switch.mf1_bedroom1_lamp2_adaptive_lighting_brightness

  - id: "92bc214d-271f-41e2-9ec4-8acc93475bb5"
    alias: "MF1: Bedroom1 Lamp2 - Adaptive Lighting (Turn Off Brightness Adjustment)"
    description: ""
    trigger:
        - platform: event
          event_type: hue_event
          event_data:
            id: mf1_bedroom1_lamp2_switch_button
            subtype: 3
        - platform: event
          event_type: hue_event
          event_data:
            id: mf1_bedroom1_lamp2_switch_button
            subtype: 2
    condition: []
    action:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.mf1_bedroom1_lamp2_adaptive_lighting_brightness
    mode: single

  - id: "0d0e5b99-fe44-40e6-8807-454f1e248ab2"
    alias: "MF1: bedroom1 Lamp2 - Adaptive Lighting (Toggle Color Adjustment)"
    trigger:
      - platform: state
        entity_id: input_select.light_mode
        to: "Circadian"
      - platform: state
        entity_id: binary_sensor.mf1_bedroom1_lamp2_autocolor
        not_from:
          - "unknown"
          - "unavailable"
        not_to:
          - "unknown"
          - "unavailable"
    variables:
      brightness_mode: "{{ states('binary_sensor.mf1_bedroom1_lamp2_autocolor') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ brightness_mode }}"
        data:
          entity_id:
            - switch.mf1_bedroom1_lamp2_adaptive_lighting_color
    mode: single

  - id: "83e8f7c1-c19b-449b-8510-271ab90b29c0"
    alias: "MF1: Bedroom1 Lamp2 - Adaptive Lighting (Turn Off Color Adjustment)"
    description: ""
    trigger:
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 4
            type: "long_release"
    condition: []
    action:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
            - switch.mf1_bedroom1_lamp2_adaptive_lighting_color
    mode: single

  - id: "5db29ab1-0ad3-492d-9cb0-763c0d2e6561"
    alias: "MF1: Bedroom1 Lamp2 at Night"
    description: "Turn on Bedroom1 Lamp2 at night"
    trigger:
      - event: sunset
        platform: sun
    condition: []
    action:
      - scene: scene.mf1_bedroom1_lamp2_homeassistant

# ==================================================================================================
#
# Input Boolean
#
# ==================================================================================================
input_boolean:

  # ================================================================================================
  #
  # The next three input_boolean entities are used to track if the light has been turned green today
  #
  # ================================================================================================
  mf1_bedroom1_cf1_green_event:
    name: "MF1: Bedroom1 CF1 - Green Event"

  mf1_bedroom1_lamp1_green_event:
    name: "MF1: Bedroom1 Lamp1 - Green Event"

  mf1_bedroom1_lamp2_green_event:
    name: "MF1: Bedroom1 Lamp2 - Green Event"

# ==================================================================================================
#
# Rest Commands
#
# - 02: 2fb5f88c-d173-4d81-87de-4c3b03c9a75e
#   name: MF1: Bedroom1 CF1 Bulb1
# - 07: e7e3a4b4-c9ac-4841-929f-7330da707855
#   name: MF1: Bedroom1 Lamp2 Bulb1
# - 11: 879c70e6-8212-452b-bda5-659943158edb
#   name: MF1: Bedroom1 Lamp1 Bulb1
# - 14: 0bdf5862-6217-4ab3-b9d3-bed4daf06f7c
#   name: MF1: Bedroom1 Lamp1 Bulb2
# - 15: b71eb26f-4d78-404a-a51a-49043497b63c
#   name: MF1: Bedroom1 Lamp2 Bulb2
#
# ==================================================================================================
rest_command:
  light_update_mf1_bedroom1_scene:
    url: "https://hue1.iot.home/clip/v2/resource/scene/{{ scene_id }}"
    method: put
    headers:
      hue-application-key: "{{ username }}"
    payload: '{
          "id":"{{ scene_id }}",
          "actions":[
          {
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid":"2fb5f88c-d173-4d81-87de-4c3b03c9a75e","rtype":"light"}
          },{
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid":"879c70e6-8212-452b-bda5-659943158edb","rtype":"light"}
          },{
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid":"0bdf5862-6217-4ab3-b9d3-bed4daf06f7c","rtype":"light"}
          },{
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid":"e7e3a4b4-c9ac-4841-929f-7330da707855","rtype":"light"}
          },{
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid":"b71eb26f-4d78-404a-a51a-49043497b63c","rtype":"light"}
          }
          ]
          }'
    verify_ssl: false
    content_type: "application/json"

  light_update_mf1_bedroom1_cf1_scene:
    url: "https://hue1.iot.home/clip/v2/resource/scene/{{ scene_id }}"
    method: put
    headers:
      hue-application-key: "{{ username }}"
    payload: '{
          "id":"{{ scene_id }}",
          "actions":[
          {
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid":"2fb5f88c-d173-4d81-87de-4c3b03c9a75e","rtype":"light"}
          }
          ]
          }'
    verify_ssl: false
    content_type: "application/json"

  light_update_mf1_bedroom1_lamp1_scene:
    url: "https://hue1.iot.home/clip/v2/resource/scene/{{ scene_id }}"
    method: put
    headers:
      hue-application-key: "{{ username }}"
    payload: '{
          "id":"{{ scene_id }}",
          "actions":[
          {
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid":"879c70e6-8212-452b-bda5-659943158edb","rtype":"light"}
          },{
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid":"0bdf5862-6217-4ab3-b9d3-bed4daf06f7c","rtype":"light"}
          }
          ]
          }'
    verify_ssl: false
    content_type: "application/json"

  light_update_mf1_bedroom1_lamp2_scene:
    url: "https://hue1.iot.home/clip/v2/resource/scene/{{ scene_id }}"
    method: put
    headers:
      hue-application-key: "{{ username }}"
    payload: '{
          "id":"{{ scene_id }}",
          "actions":[
          {
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid":"e7e3a4b4-c9ac-4841-929f-7330da707855","rtype":"light"}
          },{
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid":"b71eb26f-4d78-404a-a51a-49043497b63c","rtype":"light"}
          }
          ]
          }'
    verify_ssl: false
    content_type: "application/json"

# ==================================================================================================
#
# Scenes
#
# ==================================================================================================
#scene:

# ==================================================================================================
#
# Scripts
#
# ==================================================================================================

# ==================================================================================================
#
# Template binary_sensors and sensors
#
# ==================================================================================================
template:
  - binary_sensor:
      # ============================================================================================
      #
      # Whole Room Binary Sensors
      #
      # ============================================================================================
      - unique_id: "969aceec-9cc3-4c11-926a-6d5eee3b940a"
        name: "Bedroom1 Color Mode"
        state: "{{ is_state_attr('light.mf1_bedroom1','color_mode', 'xy') }}"

      # ============================================================================================
      #
      # Ceiling Fixture 1 Binary Sensors
      #
      # ============================================================================================
      - unique_id: "81afb5be-19ad-48f5-a54b-99e3ddd20fe0"
        name: "MF1: Bedroom1 CF1 (Autobrightness)"
        state: >-
          {{ (
               states("sensor.global_dummy_light_brightness") | int(100) ) <
               ( state_attr("binary_sensor.mf1_bedroom1_cf1_autobrightness", "brightness_max")
               | int(104) )
             and ( states("sensor.global_dummy_light_brightness") | int(100) ) >
             ( state_attr("binary_sensor.mf1_bedroom1_cf1_autobrightness", "brightness_min")
             | int(96)
             ) }}
        attributes:
          brightness: >-
            {% if state_attr("light.mf1_bedroom1_cf1", "brightness") == None or
               is_state_attr("light.mf1_bedroom1_cf1", "brightness", "unknown") or
               is_state("light.mf1_bedroom1_cf1", "off") %}
              {{ ( states("sensor.global_dummy_light_brightness") | int(100) ) }}
            {% else %}
              {{ ( state_attr("light.mf1_bedroom1_cf1","brightness") / 254 * 100 ) | int(100) }}
            {% endif %}
          brightness_max: >-
            {{ state_attr("binary_sensor.mf1_bedroom1_cf1_autobrightness", "brightness")
            | int(100) + 4 }}
          brightness_min: >-
            {{ state_attr("binary_sensor.mf1_bedroom1_cf1_autobrightness", "brightness")
            | int(100) - 4 }}

      - unique_id: "1ede2ca9-e8c8-4c01-8d36-05fa3693efdd"
        name: "MF1: Bedroom1 CF1 - Autocolor"
        state: >-
          {{ ( states("sensor.global_dummy_light_color_temperature") | int(367) ) <
               ( state_attr("binary_sensor.mf1_bedroom1_cf1_autocolor", "color_temp_max")
               | int(382) )
             and ( states("sensor.global_dummy_light_color_temperature") | int(367) ) >
               ( state_attr("binary_sensor.mf1_bedroom1_cf1_autocolor", "color_temp_min")
               | int(352))
             }}
        attributes:
          color_temp: >-
            {% if state_attr("light.mf1_bedroom1_cf1", "color_temp") is number %}
              {{ state_attr("light.mf1_bedroom1_cf1","color_temp") | int(367) }}
            {% else %}
              {{ ( states("sensor.global_dummy_light_color_temperature") | int(367) ) }}
            {% endif %}
          color_temp_max: >-
            {{ state_attr("binary_sensor.mf1_bedroom1_cf1_autocolor", "color_temp") | int(367) + 15 }}
          color_temp_min: >-
            {{ state_attr("binary_sensor.mf1_bedroom1_cf1_autocolor", "color_temp") | int(367) - 15 }}

      # ============================================================================================
      #
      # Lamp 1 Binary Sensors
      #
      # ============================================================================================
      - unique_id: "d03e7d81-3a2e-4ffe-b2bf-962ead50cd1c"
        name: "MF1: Bedroom1 Lamp1 (Autobrightness)"
        state: >-
          {{ (
               states("sensor.global_dummy_light_brightness") | int(100) ) <
               ( state_attr("binary_sensor.mf1_bedroom1_lamp1_autobrightness", "brightness_max")
               | int(104) )
             and ( states("sensor.global_dummy_light_brightness") | int(100) ) >
             ( state_attr("binary_sensor.mf1_bedroom1_lamp1_autobrightness", "brightness_min") | int(96)
             ) }}
        attributes:
          brightness: >-
            {% if state_attr("light.mf1_bedroom1_lamp1", "brightness") == None or
               is_state_attr("light.mf1_bedroom1_lamp1", "brightness", "unknown") or
               is_state("light.mf1_bedroom1_lamp1", "off") %}
              {{ ( states("sensor.global_dummy_light_brightness") | int(100) ) }}
            {% else %}
              {{ ( state_attr("light.mf1_bedroom1_lamp1","brightness") / 254 * 100 ) | int(100) }}
            {% endif %}
          brightness_max: >-
            {{ state_attr("binary_sensor.mf1_bedroom1_lamp1_autobrightness", "brightness") | int(100) + 4 }}
          brightness_min: >-
            {{ state_attr("binary_sensor.mf1_bedroom1_lamp1_autobrightness", "brightness") | int(100) - 4 }}
          xy_color: >-
            {{ state_attr("light.mf1_bedroom1_lamp1", "xy_color") }}
          color_temp: >-
            {{ state_attr("light.mf1_bedroom1_lamp1", "color_temp") }}

      - unique_id: "fb8f37fe-7a8d-4e11-9c97-b92136ff2ce1"
        name: "MF1: Bedroom1 Lamp1 - Autocolor"
        state: >-
          {{ ( states("sensor.global_dummy_light_color_temperature") | int(367) ) <
               ( state_attr("binary_sensor.mf1_bedroom1_lamp1_autocolor", "color_temp_max")
               | int(382) )
             and ( states("sensor.global_dummy_light_color_temperature") | int(367) ) >
               ( state_attr("binary_sensor.mf1_bedroom1_lamp1_autocolor", "color_temp_min")
               | int(352))
             }}
        attributes:
          color_temp: >-
            {% if state_attr("light.mf1_bedroom1_lamp1", "color_temp") is number %}
              {{ state_attr("light.mf1_bedroom1_lamp1","color_temp") | int(367) }}
            {% else %}
              {{ ( states("sensor.global_dummy_light_color_temperature") | int(367) ) }}
            {% endif %}
          color_temp_max: >-
            {{ state_attr("binary_sensor.mf1_bedroom1_lamp1_autocolor", "color_temp") | int(367) + 15 }}
          color_temp_min: >-
            {{ state_attr("binary_sensor.mf1_bedroom1_lamp1_autocolor", "color_temp") | int(367) - 15 }}

      # ============================================================================================
      #
      # Lamp 2 Binary Sensors
      #
      # ============================================================================================
      - unique_id: "2d72d588-2e84-474e-bb1a-362d1c4ff334"
        name: "MF1: Bedroom1 Lamp2 (Autobrightness)"
        state: >-
          {{ (
               states("sensor.global_dummy_light_brightness") | int(100) ) <
               ( state_attr("binary_sensor.mf1_bedroom1_lamp2_autobrightness", "brightness_max")
               | int(104) )
             and ( states("sensor.global_dummy_light_brightness") | int(100) ) >
             ( state_attr("binary_sensor.mf1_bedroom1_lamp2_autobrightness", "brightness_min") | int(96)
             ) }}
        attributes:
          brightness: >-
            {% if state_attr("light.mf1_bedroom1_lamp2", "brightness") == None or
               is_state_attr("light.mf1_bedroom1_lamp2", "brightness", "unknown") or
               is_state("light.mf1_bedroom1_lamp2", "off") %}
              {{ ( states("sensor.global_dummy_light_brightness") | int(100) ) }}
            {% else %}
              {{ ( state_attr("light.mf1_bedroom1_lamp2","brightness") / 254 * 100 ) | int(100) }}
            {% endif %}
          brightness_max: >-
            {{ state_attr("binary_sensor.mf1_bedroom1_lamp2_autobrightness", "brightness") | int(100) + 4 }}
          brightness_min: >-
            {{ state_attr("binary_sensor.mf1_bedroom1_lamp2_autobrightness", "brightness") | int(100) - 4 }}

      - unique_id: "7259164f-cc54-422f-b58d-28f14a006925"
        name: "MF1: Bedroom1 Lamp2 - Autocolor"
        state: >-
          {{ ( states("sensor.global_dummy_light_color_temperature") | int(367) ) <
               ( state_attr("binary_sensor.mf1_bedroom1_lamp2_autocolor", "color_temp_max")
               | int(382) )
             and ( states("sensor.global_dummy_light_color_temperature") | int(367) ) >
               ( state_attr("binary_sensor.mf1_bedroom1_lamp2_autocolor", "color_temp_min")
               | int(352))
             }}
        attributes:
          color_temp: >-
            {% if state_attr("light.mf1_bedroom1_lamp2", "color_temp") is number %}
              {{ state_attr("light.mf1_bedroom1_lamp2","color_temp") | int(367) }}
            {% else %}
              {{ ( states("sensor.global_dummy_light_color_temperature") | int(367) ) }}
            {% endif %}
          color_temp_max: >-
            {{ state_attr("binary_sensor.mf1_bedroom1_lamp2_autocolor", "color_temp") | int(367) + 15 }}
          color_temp_min: >-
            {{ state_attr("binary_sensor.mf1_bedroom1_lamp2_autocolor", "color_temp") | int(367) - 15 }}

  - sensor:
      # ============================================================================================
      #
      # Whole Room Sensors
      #
      # ============================================================================================
      - unique_id: "bdc23cf8-8204-40bf-8862-e17d769c20af"
        name: "MF1: Bedroom1 Color"
        state: "{{ state_attr('light.mf1_bedroom1', 'xy_color') }}"

      # ============================================================================================
      #
      # Ceiling Fixture 1 Sensors
      #
      # ============================================================================================
      - unique_id: "37cff5fc-5d44-49c1-afc5-667149a88bed"
        name: "MF1: Bedroom1 CF1 Color"
        state: "{{ state_attr('light.mf1_bedroom1_cf1', 'xy_color') }}"

      # ============================================================================================
      #
      # Lamp 1 Sensors
      #
      # ============================================================================================
      - unique_id: "101b21a5-0f36-4171-ae6d-38552da993c1"
        name: "MF1: Bedroom1 Lamp1 Color"
        state: "{{ state_attr('light.mf1_bedroom1_lamp1', 'xy_color') }}"

      # ============================================================================================
      #
      # Lamp 2 Sensors
      #
      # ============================================================================================
      - unique_id: "8970dec0-877b-4cbd-a98b-0f708475377a"
        name: "MF1: Bedroom1 Lamp2 Color"
        state: "{{ state_attr('light.mf1_bedroom1_lamp2', 'xy_color') }}"

