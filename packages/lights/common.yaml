automation:
  # ======================================================================
  #
  # Set Lighting Mode: Circadian (with Brightness adjustments)"
  #
  # - In the morning when the sun rises to 18 degrees below the horizon
  #   enable
  # ======================================================================
  - alias: '[Lights] Set Lighting Mode: Circadian'
    description: ''
    trigger:
      - platform: numeric_state
        entity_id: sun.sun
        value_template: "{{ state_attr('sun.sun', 'elevation') }}"
        above: -18
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.light_mode
          option: 'Circadian'

  # ======================================================================
  #
  # Set Lighting Mode: Darken House"
  #
  # - In the morning when the sun rises to 18 degrees below the horizon
  #   enable
  # ======================================================================
  - alias: "[Lights] Set Light Mode: Darken House"
    description: ''
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.lights_off
    condition: []
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.light_mode
          option: 'Darken House'

  # ======================================================================
  #
  # Set Lighting Mode: Circadian (with Brightness adjustments)"
  #
  # - In the morning when the sun rises to 18 degrees below the horizon
  #   enable
  # ======================================================================
  - alias: '[Lights] Set Lighting Mode: Migraine'
    trigger:
      platform: state
      entity_id: input_boolean.special_migraine_mode
      to: 'on'
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.light_mode
          option: 'Migraine'

  # ======================================================================
  #
  # Set Lighting Mode: Circadian (with Brightness adjustments)"
  #
  # - In the morning when the sun rises to 18 degrees below the horizon
  #   enable
  # ======================================================================
  - alias: '[Lights] Set Light Mode: Guests'
    description: ''
    trigger:
    - platform: state
      entity_id: input_boolean.special_guest_present
      from: 'off'
      to: 'on'
    condition: []
    action:
      data:
        entity_id: input_select.light_mode
        option: Guests
      service: input_select.select_option


  # ======================================================================
  #
  # Set Lighting Mode: Circadian (with Brightness adjustments)"
  #
  # - In the morning when the sun rises to 18 degrees below the horizon
  #   enable
  # ======================================================================


#   # - alias: 'Turn on lights to proper color'
#   #   action:
#   #     service: light.turn_on
#   #     data_template:
#   #       entity_id: light.entity
#   #       kelvin: "{{ state_attr('sensor.circadian_values', 'colortemp') | int }}"
#   #       brightness_pct: "{{ state_attr('switch.circadian_lighting_main_couch_right', 'brightness') | int }}"

#   # - alias: 'Main Couch Right Switch'
#   #   action:
#   #     service: light.turn_on
#   #     data_template:
#   #       entity_id: light.entity
#   #       kelvin: "{{ state_attr('sensor.circadian_values', 'colortemp') | int }}"
#   #       brightness_pct: "{{ state_attr('switch.circadian_lighting_main_couch_left', 'brightness') | int }}"


# hue:
#   bridges:
#     - host: 10.3.1.1
#       allow_unreachable: false
#       allow_hue_groups: true


circadian_lighting:
  min_colortemp: 2200
  max_colortemp: 6500

input_select:
  light_mode:
    name: "Light Mode"
    options:
      - 'Circadian'
      - 'Darken House'
      - 'Migraine'
      - 'Sleeping (Migraine)'
      - 'Night Out'
      - 'Guests'
      - 'Other'
    #initial: "Circadian"
    #icon: 'mdi:light'

sensor:
#  - platform: huesensor

#  - platform: attributes
#    friendly_name: "Lamp Brightness"
#    attribute: brightness
#    unit_of_measurement: "%"
#    entities:
#      - switch.circadian_lighting_main_couch_right_with_brightness_adjustment
#      - switch.circadian_lighting_main_couch_left_with_brightness_adjustment

  - platform: template
    sensors:
      circadian_temperature:
        value_template: "{{ state_attr('sensor.circadian_values','colortemp') | round(0) }}"
        unit_of_measurement: 'Â°K'

