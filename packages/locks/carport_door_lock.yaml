# #################################################################
# # Names in needed in entity registry:                           #
# # THIS IS FOR A SCHLAGE FE599, it behaves differently than      #
# # most schlage locks                                            #
# # zwave.lock_carport_door_lock                                   #
# # lock.lock_carport_door_lock                                    #
# # sensor.lock_carport_door_lock_alarm_type,                      #
# # sensor.lock_carport_door_lock_alarm_level                      #
# # also recommend you use the recorder component in your         #
# # configuration.yaml, as well as the uptime sensor component    #
# # and for notifications I use pushbullet, but replace with      #
# # notifyier of your choice.                                     #
# #################################################################
# automation:
#   - alias: Keypad switch turned on (Carport Door)
#     initial_state: true
#     trigger:
#       - platform: state
#         to: 'on'
#         entity_id:
# # Entities need to be named to match your lock name.  In this case carport
#           - input_boolean.door_keypad_1_carport_switch
#           - input_boolean.door_keypad_2_carport_switch
#           - input_boolean.door_keypad_3_carport_switch
#           - input_boolean.door_keypad_4_carport_switch
#           - input_boolean.door_keypad_5_carport_switch
#           - input_boolean.door_keypad_6_carport_switch
#           - input_boolean.door_keypad_7_carport_switch
#           - input_boolean.door_keypad_8_carport_switch
#           - input_boolean.door_keypad_9_carport_switch
#           - input_boolean.door_keypad_10_carport_switch
#           - input_boolean.door_keypad_11_carport_switch
#           - input_boolean.door_keypad_12_carport_switch
#           - input_boolean.door_keypad_13_carport_switch
#           - input_boolean.door_keypad_14_carport_switch
#           - input_boolean.door_keypad_15_carport_switch
#           - input_boolean.door_keypad_16_carport_switch
#           - input_boolean.door_keypad_17_carport_switch
#           - input_boolean.door_keypad_18_carport_switch

#     condition:
#       - condition: template
#         value_template:  >-
#           {% set object_id = trigger.to_state.object_id %}
#           {% set code_slot = "_".join(object_id.split("_")[2:-2]) %}
#           {% set select_id = 'door_keypad_' ~ code_slot ~ '_access_schedule' %}
#           {{ states['input_select'][select_id].state in ['Always', 'Enabled'] }}

#     action:
#       - service: lock.set_usercode
#         data_template:
#           node_id: >-
#             {{ states.lock.lock_carport_door_lock.attributes.node_id }}
            
#           code_slot: >-
#             {% set object_id = trigger.to_state.object_id %}
#             {% set code_slot = "_".join(object_id.split("_")[2:-2]) %}
#             {{ code_slot }}

#           usercode: >-
#             {% set object_id = trigger.to_state.object_id %}
#             {% set code_slot = "_".join(object_id.split("_")[2:-2]) %}
#             {% set user_code_id = 'door_keypad_' ~ code_slot ~ '_code' %}
#             {{ states['input_text'][user_code_id].state }}

#   - alias: Keypad switch turned off (Carport Door)
#     initial_state: true
#     trigger:
#       - platform: state
#         to: 'off'
#         entity_id:
#           - input_boolean.door_keypad_1_carport_switch
#           - input_boolean.door_keypad_2_carport_switch
#           - input_boolean.door_keypad_3_carport_switch
#           - input_boolean.door_keypad_4_carport_switch
#           - input_boolean.door_keypad_5_carport_switch
#           - input_boolean.door_keypad_6_carport_switch
#           - input_boolean.door_keypad_7_carport_switch
#           - input_boolean.door_keypad_8_carport_switch
#           - input_boolean.door_keypad_9_carport_switch
#           - input_boolean.door_keypad_10_carport_switch
#           - input_boolean.door_keypad_11_carport_switch
#           - input_boolean.door_keypad_12_carport_switch
#           - input_boolean.door_keypad_13_carport_switch
#           - input_boolean.door_keypad_14_carport_switch
#           - input_boolean.door_keypad_15_carport_switch
#           - input_boolean.door_keypad_16_carport_switch
#           - input_boolean.door_keypad_17_carport_switch
#           - input_boolean.door_keypad_18_carport_switch
#     condition:    
#       - condition: template
#         value_template: >-
#           {% set object_id = trigger.to_state.object_id %}
#           {% set code_slot = object_id[7:-19] %}
#           {% set input = 'door_keypad_' ~ code_slot ~ '_access_schedule' %}
#           {% set input_value = states['input_select'][input].state %}
#           {{ input_value == 'Temporary' }}

#     action:
# # this is where usercodes get deleted, for the many locks there seems to be an issue with 
# # clear usercode, so this sets a random code, of course that means there is an unknown code in the cleared
# # slots.  If you dont like that set a specific code that only you know
#       - service: lock.set_usercode
#         data_template:
#           usercode: >-
#             {{ range(1000, 9999) | random }}

#           node_id: >-
#             {{ states.lock.lock_carport_door_lock.attributes.node_id }}

#           code_slot: >-
#             {% set object_id = trigger.to_state.object_id %}
#             {% set code_slot = "_".join(object_id.split("_")[2:-2]) %}
#             {{ code_slot }}

#   - alias: Keypad temporary code start (Carport Door)
#     initial_state: true
#     trigger:
#       - platform: state
#         to: 'True'
#         entity_id:
#           - sensor.keypad_1_temp_lock_turn_on
#           - sensor.keypad_2_temp_lock_turn_on
#           - sensor.keypad_3_temp_lock_turn_on
#           - sensor.keypad_4_temp_lock_turn_on
#           - sensor.keypad_5_temp_lock_turn_on
#           - sensor.keypad_6_temp_lock_turn_on
#           - sensor.keypad_7_temp_lock_turn_on
#           - sensor.keypad_8_temp_lock_turn_on
#           - sensor.keypad_9_temp_lock_turn_on
#           - sensor.keypad_10_temp_lock_turn_on
#           - sensor.keypad_11_temp_lock_turn_on
#           - sensor.keypad_12_temp_lock_turn_on
#           - sensor.keypad_13_temp_lock_turn_on
#           - sensor.keypad_14_temp_lock_turn_on
#           - sensor.keypad_15_temp_lock_turn_on
# # if you changed the name of your switch from "carport" change below to match
#     condition:
#       - condition: template
#         value_template: >-
#           {% set object_id = trigger.to_state.object_id %}
#           {% set code_slot = object_id[7:-18] %}
#           {% set input = 'door_keypad_' ~ code_slot ~ '_carport_switch' %}
#           {{ states['input_boolean'][input].state == 'on' }}
  
#     action:
#       - service: lock.set_usercode
#         data_template:
#           usercode: >-
#             {% set object_id = trigger.to_state.object_id %}
#             {% set code_slot = object_id[7:-18] %}
#             {% set input = 'door_keypad_' ~ code_slot ~ '_code' %}
#             {{ states['input_text'][input].state }}

#           node_id: >-
#             {{ states.lock.lock_carport_door_lock.attributes.node_id }}

#           code_slot: >-
#             {% set object_id = trigger.to_state.object_id %}
#             {% set code_slot = object_id[7:-18] %}
#             {{ code_slot }}

#       - service: notify.pushover
#         data_template:
#           message: >-
#             {% set object_id = trigger.to_state.object_id %}
#             {% set code_slot = object_id[7:-18] %}
#             {% set usercode_input = 'door_keypad_' ~ code_slot ~ '_code' %}
#             {% set usercode = states['input_text'][usercode_input].state %}
#             {% set name_input = 'door_keypad_' ~ code_slot ~ '_name' %}
#             {% set name = states['input_text'][name_input].state %}
#             {% set start_input = 'lock_code_' ~ code_slot ~ '_schedule' %}
#             {% set start = as_timestamp(states['calendar'][start_input].attributes.start_time) | timestamp_custom('%A %x at %I:%M %p' ) %}
#             {% set end_input = 'lock_code_' ~ code_slot ~ '_schedule' %}
#             {% set end = as_timestamp(states['calendar'][end_input].attributes.end_time) | timestamp_custom('%A %x at %I:%M %p' ) %}
#             The pin code {{ usercode }} is now temporarily enabled for {{ name }} starting on {{ start }} and ending on {{ end }}.

#           title: >-
#             Beach House: Temporary code enabled on Carport Door
#           target:
#           - Paul
#           - Tracy

#   - alias: "Carport Door Lock Remote Activity"
#     initial_state: true
#     # Any change in lock state, lock or unlock
#     trigger:
#       - platform: state
#         entity_id: lock.lock_carport_door_lock
#     # Ensure user code has not been entered
#     condition:
#       condition: state
#       entity_id: sensor.carport_door_code_entered
#       state: '0'
#     # input_select is used for tracking
#     action:
#       - service: input_select.select_option
#         data_template:
#           entity_id: input_select.hass_status_for_carport_door_lock
#           option: >
#             {% if is_state("lock.lock_carport_door_lock", "locked") %}
#               HA Lock
#             {% else %}
#               HA Unlock
#             {% endif %}

#   - alias: Notify on Unlock (Carport Door)
#     initial_state: true
#     trigger:
#       - platform: state
#         entity_id: sensor.carport_door_code_entered
#         from: '0'
#     condition:

#     action:
#     - service: input_select.select_option
#       data:
#         entity_id: input_select.hass_status_for_carport_door_lock
#         option: Unlocked with Code
# ## This  will just set a a friendly name of whoever unlocked the door to input_text.carport_door_code,  Use for other automations if you want.
#     - service: input_text.set_value
#       data_template:
#         entity_id: input_text.carport_door_code
#         value: >
#           {% set number = states('sensor.lock_carport_door_lock_alarm_level') %}
#           {% set entity_id = 'input_text.door_keypad_' + number + '_name' %}
#           {% set user = 'Master' if number == '0' else states(entity_id) %}
#           {{ user }}
#     - delay:
#         seconds: 1
#     - condition: template
#       value_template: >-
#         {% set object_id = trigger.to_state.entity_id.split(".")[1] %}
#         {% set door_unlocked = object_id.split("_")[0] %}
#         {% set alarm_level_object_id = 'lock_' ~ door_unlocked ~ '_door_lock_alarm_level' %}
#         {% set code_used = states['sensor'][alarm_level_object_id].state %}
#         {% set notify_input_object_id = 'code_' ~ code_used ~ '_notify' %}
#         {{ states['input_boolean'][notify_input_object_id].state == 'on' }}
#     - service: notify.pushover
#       data_template:
#         title: "Carport Door Unlocked"
#         message: >-
#            by {{ states.input_text.carport_door_code.state }} at {{ as_timestamp (now()) | timestamp_custom('%I:%M %p') }} 
#         target:
#         - Paul
#         - Tracy

# input_text:
#   carport_door_code:
#     name: Last Person to Unlock Carport Door with Keypad

# input_boolean:
#   door_keypad_1_carport_switch:
#   door_keypad_2_carport_switch:
#   door_keypad_3_carport_switch:
#   door_keypad_4_carport_switch:
#   door_keypad_5_carport_switch:
#   door_keypad_6_carport_switch:
#   door_keypad_7_carport_switch:
#   door_keypad_8_carport_switch:
#   door_keypad_9_carport_switch:
#   door_keypad_10_carport_switch:
#   door_keypad_11_carport_switch:
#   door_keypad_12_carport_switch:
#   door_keypad_13_carport_switch:
#   door_keypad_14_carport_switch:
#   door_keypad_15_carport_switch:
#   door_keypad_16_carport_switch:
#   door_keypad_17_carport_switch:
#   door_keypad_18_carport_switch:

# ======================================================================
#
# Input Select
#
# ======================================================================
input_select:
  hass_status_for_carport_door_lock:
    name: Carport Door Lock HASS Status
    icon: mdi:lock
    options:
      - HA Lock
      - HA Unlock
      - Unlocked with Code
      - Other

# ======================================================================
#
# Sensors
#
# ======================================================================
# sensor:
#   - platform: template
#     sensors:
#       carport_door_lock_state:
#         friendly_name: "Carport Door Lock State"
#         #NOTE: To ensure consistent updates, we link to the update of the zwave entity id, and not the lock!
#         entity_id:
#           - sensor.lock_carport_door_deadbolt_alarm_type
#           #- input_select.lock_hass_status_for_office_back_door_lock
#           - zwave.carport_door_lock
#         value_template: >-
#           {% set alarm_type = states('sensor.lock_carport_door_deadbolt_alarm_type') %}
#           {% set alarm_level = states('sensor.lock_carport_door_deadbolt_alarm_level') %}
#           #{% set hass_state = states('input_select.lock_hass_status_for_office_back_door_lock') %}

#           {#- Z-Wave/RF Lock: Alarm State 0x01 (???) -#}
#           {%- if hass_state == 'locked_by_hass' -%}
#               {{ 'locked with Home Assistant' }}

#           {#- Z-Wave/RF Unlock: Alarm State 0x01 (???) -#}
#           {%- elif hass_state == 'unlocked_by_hass' -%}
#               {{ 'unlocked with Home Assistant' }}

#           {# Manually Locked: Alarm State 0x15 (21) #}
#           {% elif alarm_type == '21' %}
#              {{ 'locked manually with key cylinder or inside thumb turn' }}

#           {#- Manual Unlock: Alarm State 0x16 (22) -#}
#           {%- elif alarm_type == '22' -%}
#               {{ 'unlocked manually with key cylinder or inside thumb turn' }}

#           {#- Keypad Lock by keypad touch (lock & leave): Alarm State 0x12 (18) -#}
#           {%- elif alarm_type ==  '18' -%}
#               {{ 'locked with keypad' }}

#           {#- Keypad Unlock: Alarm State 0x13 (19) -#}
#           {%- elif alarm_type == '19' -%}
#               {{ 'unlocked with keypad by user ' ~ alarm_level }}

#           {%- else -%}
#               {#- The lock status is sometimes unknown when HASS boots and Z-Wave is initialized.
#                 In this case we want to use the last state reported by the lock itself (physically) if possible, otherwise
#                 we return 'unknown' -#}
#               {# {{ 'unknown' }} #}
#               {% set state = states.lock.lock_carport_door_deadbolt_locked %}
#               {% set status = (state.attributes.lock_status if state else '')|trim() %}
#               {% set result = status if status != '' else 'unknown' %}
#               {{ result|lower() }}
#           {%- endif -%}

#       carport_door_code_entered:
#         value_template: >-
#           {% if ((as_timestamp(states.lock.lock_carport_door_lock.last_changed) - as_timestamp(states.sensor.lock_carport_door_lock_alarm_level.last_changed)) < 1) %}
#             {{ states.sensor.lock_carport_door_lock_alarm_level.state }}
#           {% else %}
#             0
#           {% endif %}

# # These settings are for a Schlage FE599 which is a bit different.
#       carport_door_report:
#         friendly_name: 'Carport Door'
#         value_template: >
#             {% set number = states('sensor.lock_carport_door_lock_alarm_level') %}
#             {% set alarm_type_value = states('sensor.lock_carport_door_lock_alarm_type') %}
#             {% set entity_id = 'input_text.door_keypad_' + number + '_name' %}
#             {% set user = 'Master' if number == '0' else states(entity_id) %}
#             {% if is_state('input_select.hass_status_for_carport_door_lock', 'HA Unlock') %}
#               HA Unlock
#             {% elif is_state('input_select.hass_status_for_carport_door_lock', 'HA Lock') %}
#               HA Lock
#             {% elif is_state('sensor.carport_door_code_entered', '0') %}
#               {% if is_state('lock.lock_carport_door_lock', 'locked') %}
#                 Auto Re-Locked. Last unlocked with Code {{ number }} ({{ user }})
#               {% else %}
#                 Keypad Unlock with Code {{ number }} ({{ user }})
#               {% endif %}
#             {% elif is_state('sensor.lock_carport_door_lock_alarm_type', '16') %}
#                 Unlocked with Code {{ number }} ({{ user }})
#             {% else %}
#               {{ states.lock_carport_door_lock.attributes.lock_status }}
#             {% endif %}

#       carportdoor_code:
#         friendly_name: 'Last Person to unlock with Keypad (Carport Door)'
#         value_template: >
#           {% set number = states('sensor.lock_carport_door_lock_alarm_level') %}
#           {% set entity_id = 'input_text.door_keypad_' + number + '_name' %}
#           {% set user = 'Master' if number == '0' else states(entity_id) %}
#           {{ user }}
      # carport_door_report:
      #   friendly_name: 'Carport Door'
      #   value_template: >
      #     {% set number = states('sensor.lock_carport_door_deadbolt_alarm_level') %}
      #     {% set alarm_type_value = states('sensor.lock_carport_door_deadbolt_alarm_type') %}
      #     {% set entity_id = 'input_text.door_keypad_' + number + '_name' %}
      #     {% set user = 'Master' if number == '0' else states(entity_id) %}
      #     {% set alarm_type_value = '24' if (as_timestamp(now())-as_timestamp(states.lock.lock_carport_door_lock.last_changed)) < 15 and (as_timestamp(now())-as_timestamp(states.sensor.lock_carport_door_deadbolt_alarm_type.last_changed)) > 15  and (states.lock.lock_carport_door_lock.state) == 'locked' else alarm_type_value %}
      #     {% set alarm_type_value = '25' if (as_timestamp(now())-as_timestamp(states.lock.lock_carport_door_lock.last_changed)) < 15 and (as_timestamp(now())-as_timestamp(states.sensor.lock_carport_door_deadbolt_alarm_type.last_changed)) > 15  and (states.lock.lock_carport_door_lock.state) == 'unlocked' else alarm_type_value %}
      #     {% set alarm_type_general_actions = {
      #       '0':'No Status Reported',          
      #       '9':'Lock Jammed',
      #       '17':'Keypad Lock Jammed',
      #       '21':'Manual Lock',
      #       '22':'Manual Unlock',
      #       '23':'HA Lock Jammed',
      #       '24':'HA Lock',
      #       '25':'HA Unlock',
      #       '26':'Auto Lock Jammed',
      #       '27':'Auto Lock',
      #       '32':'All Codes Deleted',
      #       '161':'Bad Code Entered',
      #       '167':'Battery Low',
      #       '168':'Battery Critical',
      #       '169':'Battery Too Low To Operate Lock' } %}
      #     {% set alarm_type_lock_actions = {
      #       '18':'Keypad Lock',
      #       '19':'Keypad Unlock',
      #       '162':'Lock Code Attempt Outside of Schedule' } %}
      #     {% set alarm_type_code_actions = {
      #       '33':'Code Deleted',
      #       '112':'Code Changed',
      #       '113':'Duplicate Code' } %}
      #     {% if alarm_type_value in alarm_type_code_actions %}
      #       {{ alarm_type_code_actions[alarm_type_value] }} (Code {{ number}})
      #     {% elif alarm_type_value in alarm_type_lock_actions and number == '0' %}
      #       {{ alarm_type_lock_actions[alarm_type_value] }} with Schlage Button
      #     {% elif alarm_type_value in alarm_type_lock_actions  %}
      #       {{ alarm_type_lock_actions[alarm_type_value] }} with Code {{ number }} ({{ user }})
      #     {% elif alarm_type_value in alarm_type_general_actions %}
      #       {{ alarm_type_general_actions[alarm_type_value] }}
      #     {% else %}
      #       Unknown Alarm Type Value {{ states('sensor.lock_carport_door_deadbolt_alarm_type') }}
      #     {% endif %}
