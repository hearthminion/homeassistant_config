---
# ==================================================================================================
#
# Settings, automations, etc that are common to all lights in all rooms.
#
# ==================================================================================================
adaptive_lighting:
  - name: "Global: Dummy Light"
    initial_transition: 1
    min_color_temp: 2000
    max_color_temp: 6500
    #sunrise_time:
    #sunset_time:

# ==================================================================================================
#
# Automations
#
# ==================================================================================================
automation:
  - id: "65d7e60e-4e39-460b-a319-b65f497b6465"
    alias: "[Light] Global: All Lights - Enable Automations"
    description: ""
    trigger:
      - event: start
        platform: homeassistant
    condition: []
    action:
      - scene: scene.light_bf1_all_enable_automations
      - scene: scene.light_bf1_den_enable_automations
      - scene: scene.light_bf1_hallway_enable_automations
      - scene: scene.light_global_all_enable_automations
      - scene: scene.light_mf1_bedroom1_enable_automations
      - scene: scene.light_mf2_den_enable_automations

  # ================================================================================================
  #
  #
  #
  # ================================================================================================
  - id: "a3ed2024-e1a9-4ac8-8dca-80cc62812fcf"
    alias: "[Light] Global: All Lights - Adaptive Lighting (Toggle)"
    description: ''
    initial_state: false
    trigger:
      - platform: state
        entity_id: binary_sensor.circadian_mode
    variables:
      circadian_mode: "{{ is_state('binary_sensor.circadian_mode','on') }}"
    condition: []
    action:
      - service: "switch.turn_{{ circadian_mode }}"
        data:
          entity_id:
            - switch.bf1_den_cf1_adaptive_lighting
            - switch.bf1_den_cf2_adaptive_lighting
            - switch.bf1_den_lamp1_adaptive_lighting
            - switch.bf1_den_lamp2_adaptive_lighting
            - switch.bf1_den_lamp3_adaptive_lighting
            - switch.bf1_hallway_adaptive_lighting
            - switch.bf1_kitchen_adaptive_lighting
            - switch.bf1_stairwell_adaptive_lighting
            - switch.bf1_storage1_adaptive_lighting
            - switch.bf1_storage2_adaptive_lighting
            - switch.mf1_bathroom1_inner_adaptive_lighting
            - switch.mf1_bedroom1_cf1_adaptive_lighting
            - switch.mf1_bedroom1_lamp1_adaptive_lighting
            - switch.mf1_bedroom1_lamp2_adaptive_lighting
            - switch.mf2_den_lamp1_adaptive_lighting
            - switch.mf2_den_lamp2_adaptive_lighting

  # ================================================================================================
  #
  #
  #
  # This automation is to ensure that the adaptive lighting switch for the global dummy light is
  # NEVER turned off.  This 'light' is used for sensor purposes only, and all other automations
  # will break if it is ever turned off.
  #
  # ================================================================================================
  - id: "7e6a8e75-fa0a-43f9-8d47-98295ccafc07"
    alias: "[Light] Global: Dummy Light - Adaptive Lighting (Turn On)"
    description: ""
    initial_state: false
    trigger:
      - platform: state
        entity_id: switch.global_dummy_light_adaptive_lighting
        from: "on"
        to: "off"
      - platform: state
        entity_id: switch.global_dummy_light_adaptive_lighting_brightness
        from: "on"
        to: "off"
      - platform: state
        entity_id: switch.global_dummy_light_adaptive_lighting_color
        from: "on"
        to: "off"
    condition: []
    action:
      - service: "switch.turn_on"
        data:
          entity_id:
            - switch.global_dummy_light_adaptive_lighting
            - switch.global_dummy_light_adaptive_lighting_brightness
            - switch.global_dummy_light_adaptive_lighting_color

  # ================================================================================================
  #
  # Set Lighting Mode: Circadian
  #
  # Trigger:
  # - In the morning when the sun rises to 18 degrees below the horizon
  #   enable
  #
  # Actions:
  #
  # ================================================================================================
  - id: "087bce7b-c92f-4c05-a3ba-22949cb79e61"
    alias: "[Light] Set Light Mode: Circadian"
    description: ""
    initial_state: false
    trigger:
      - platform: numeric_state
        entity_id: sun.sun
        value_template: "{{ state_attr('sun.sun', 'elevation') }}"
        above: -18
    condition: []
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.light_mode
          option: "Circadian"

  # ================================================================================================
  #
  # Set Lighting Mode: Darken House
  #
  # Trigger:
  # - When the timer that begins the nighttime routine finishes
  #
  # Actions:
  #
  # ================================================================================================
  - id: "ed400d67-ffec-489a-9d90-1a589baa6910"
    alias: "[Light] Set Light Mode: Darken House"
    description: ""
    initial_state: false
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.lights_off
    condition: []
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.light_mode
          option: "Darken House"

  # ================================================================================================
  #
  # Set Lighting Mode: Migraine
  #
  # Trigger:
  # - Input Boolean: Special Migraine Mode is set to true
  #
  # Actions:
  # - 
  # ================================================================================================
  - id: "1b4dd01f-acb1-4462-b14a-7d818f12787b"
    alias: "[Light] Set Light Mode: Migraine"
    description: ""
    initial_state: false
    trigger:
      - platform: state
        entity_id: input_boolean.special_migraine_mode
        to: "on"
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.light_mode
          option: "Migraine"

  - id: "387e7772-a2c3-4d29-b524-8aa36fbc65b2"
    alias: "[Light] Migraine Mode - Enable"
    description: "This automation turns on migraine mode based on light changes."
    initial_state: false
    trigger:
      - entity_id: sensor.mf2_den_lamp1_color
        platform: state
        to: (0.23, 0.698)
      - entity_id: sensor.mf2_den_lamp2_color
        platform: state
        to: (0.23, 0.698)
      - entity_id: sensor.bf1_den_color
        platform: state
        to: (0.23, 0.698)
      - entity_id: sensor.mf1_bedroom1_lamp1_color
        platform: state
        to: (0.23, 0.698)
      - entity_id: sensor.mf1_bedroom1_lamp2_color
        platform: state
        to: (0.23, 0.698)
    condition: []
    action:
      - entity_id: input_boolean.special_migraine_mode
        service: input_boolean.turn_on

  # ================================================================================================
  #
  # Set Lighting Mode: Guests
  #
  # Trigger:
  # - Input Boolean: Special Guest Mode is set to true
  #
  # Actions:
  # -
  #
  # ================================================================================================
  - id: "049e19ec-4370-427d-a080-8fece7a2ca6d"
    alias: "[Light] Set Light Mode: Guests"
    description: ""
    initial_state: false
    trigger:
      - platform: state
        entity_id: input_boolean.special_guest_present
        from: "off"
        to: "on"
    condition: []
    action:
      data:
        entity_id: input_select.light_mode
        option: "Guests"
      service: input_select.select_option

  # ================================================================================================
  #
  # Update HomeAssistant Scene on Hue Bridge
  #
  # Runs every 5 minutes while light mode is "circadian"
  #
  # ================================================================================================
  - id: "b9267e40-af1c-4f92-bb98-e6839787cc97"
    alias: "[Light] Update HomeAssistant Scene on Hue Bridges"
    description: ""
    initial_state: false
    trigger:
      - platform: time_pattern
        minutes: "/5"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.light_update_scene_homeassistant
    mode: single

  # - id: "ac5fbf47-d0d4-4ae1-9858-1522f3d96fa3"
  #   alias: "[Light] Update Migraine Scene on Hue Bridges"
  #   description: ""
  #   initial_state: false
  #   trigger:
  #     - platform: time
  #       at: "23:00:00"
  #   condition: []
  #   action:
  #     - service: script.turn_on
  #       data: {}
  #       target:
  #         entity_id: script.light_update_scene_migraine
  #   mode: single

  # ================================================================================================
  #
  # Starts a 30 minute timer when all lights are turned off
  #
  # ================================================================================================
  - id: "918ded3c-579d-4b16-8511-f89d881b0103"
    alias: "Start Sleep Timer"
    description: "Starts a timer upon going to bed."
    trigger:
      - platform: time
        at: "21:00:00"
      - platform: state
        entity_id: light.all_lights
        to: "off"
      - platform: state
        entity_id: light.mf1_bedroom1_lamp1
        from: "on"
        to: "off"
      - platform: state
        entity_id: light.mf1_bedroom1_lamp2
        from: "on"
        to: "off"
    condition:
      - condition: time
        after: "21:00:00"
      - condition: state
        entity_id: light.mf1_bedroom1_lamp1
        state: "off"
      - condition: state
        entity_id: light.mf1_bedroom1_lamp2
        state: "off"
    action:
      - service: timer.start
        data:
          entity_id: timer.lights_off


  # ================================================================================================
  #
  #
  #
  # ================================================================================================
  - id: "e92ba251-e2f1-44ed-880f-9786b07c9c98"
    alias: "[Light] All: Auto populate Hue group input select"
    mode: restart
    trigger:
      platform: event
      event_type: delayed_homeassistant_start
    action:
      service: input_select.set_options
      target:
        entity_id: input_select.hue_group
      data:
        options: >
          {{ states.light
            | selectattr('attributes.is_hue_group','eq',true)
            | map(attribute='name')
            | list }}

  - id: "768e2a2c-4be8-4822-9440-93945cf106bb"
    alias: "[Light] All: Auto populate Hue basic scene input select"
    mode: restart
    trigger:
      - platform: event
        event_type: delayed_homeassistant_start
      - platform: state
        entity_id: input_select.hue_group
    action:
      service: input_select.set_options
      target:
        entity_id: input_select.hue_basic_scene
      data:
        options: >
          {% set hue_group = states('input_select.hue_group') %}
          {{ states.scene
            | selectattr('attributes.group_name','eq',hue_group)
            | selectattr('attributes.is_dynamic','eq',false)
            | map(attribute='name')
            | list }}

  - id: "739ebd7a-cda1-4b99-81f8-ce568864893a"
    alias: "[Light] All: Auto populate Hue dynamic scene input select"
    mode: restart
    trigger:
      - platform: event
        event_type: delayed_homeassistant_start
      - platform: state
        entity_id: input_select.hue_group
    action:
      service: input_select.set_options
      target:
        entity_id: input_select.hue_dynamic_scene
      data:
        options: >
          {% set hue_group = states('input_select.hue_group') %}
          {{ states.scene
            | selectattr('attributes.group_name','eq',hue_group)
            | selectattr('attributes.is_dynamic','eq',true)
            | map(attribute='name')
            | list }}


# ==================================================================================================
#
# Input Number
#
# ==================================================================================================
input_number:

  hue_dynamic_scene_speed:
    name: Hue scene speed
    min: 0
    max: 100
    step: 10

  hue_dynamic_scene_brightness:
    name: Hue scene brightness
    min: 0
    max: 255
    step: 10

# ==================================================================================================
#
# Input select
#
# ==================================================================================================
input_select:
  light_mode:
    name: "Light Mode"
    options:
      - "Circadian"
      - "Darken House"
      - "Migraine"
      - "Sleeping (Migraine)"
      - "Night Out"
      - "Guests"
      - "Other"

  hue_group:
    name: "[Light] All: Select Hue Group"
    options:
      - "BF1: All"

  hue_basic_scene:
    name: "[Light] All: Hue Basic Scene"
    options:
      - Bright

  hue_dynamic_scene:
    name: "[Light] All: Hue Dynamic Scene"
    options:
      - Bright

# ==================================================================================================
#
# Light Groups
#
# ==================================================================================================
light:
  - platform: group
    unique_id: "5c122025-674c-4e1e-ac01-a6a0e73f24e6"
    name: "All lights"
    entities:
      - light.bf_all
      - light.mf_all

# ==================================================================================================
#
# Scenes
#
# ==================================================================================================
scene:
  - id: "e697c216-b8c7-4825-9f40-4fd01d220d40"
    name: "[Light] Global: All - Enable Automations"
    entities:
      automation.light_set_light_mode_circadian:
        state: 'on'
      automation.light_set_light_mode_guests:
        state: 'on'
      automation.light_set_light_mode_migraine:
        state: 'on'
      automation.light_set_light_mode_darken_house:
        state: 'on'
      automation.light_enable_migraine_mode:
        state: 'on'
      automation.light_global_all_lights_adaptive_lighting_toggle:
        state: 'on'
      automation.light_update_homeassistant_scene_on_hue_bridges:
        state: 'on'
      automation.light_global_dummy_light_adaptive_lighting_turn_on:
        state: 'on'

  - id: "f0bb567c-050e-4499-b46e-99697efa5de7"
    name: "[Light] Global: All - Bright"
    entities:
      light.all_lights:
        state: "on"
        color_temp: 367
        brightness: 255

  - id: "8a92e9aa-49e5-4bbd-a4ea-dba3bbc2563d"
    name: "[Light] Global: All - Concentrate"
    entities:
      light.all_lights:
        state: "on"
        color_temp: 230
        brightness: 255

  - id: "64e2926b-5a5d-4589-92aa-4d753ed2c685"
    name: "[Light] Global: All - Dimmed"
    entities:
      light.all_lights:
        state: "on"
        color_temp: 369
        brightness: 76

  - id: "84c9f8e2-a645-483b-9d63-e16d200546a8"
    name: "[Light] Global: All - Energize"
    entities:
      light.all_lights:
        state: "on"
        color_temp: 156
        brightness: 255

  - id: "f7fd82cd-02f2-4c17-b5c5-be6611659130"
    name: "[Light] Global: All - Nightlight"
    entities:
      light.all_lights:
        state: "on"
        color_temp: 454
        brightness: 1

  - id: "32aed744-19d7-4260-a1dc-bb172493f0e9"
    name: "[Light] Global: All - Read"
    entities:
      light.all_lights:
        state: "on"
        color_temp: 343
        brightness: 255

  - id: "295a2eed-8920-4163-8759-12b0637e9697"
    name: "[Light] Global: All - Relax"
    entities:
      light.all_lights:
        state: "on"
        color_temp: 447
        brightness: 145

  - id: "2a718d75-7592-445e-9693-88bebf0f40c3"
    name: "[Light] Global: All - Off"
    entities:
      light.all_lights:
        state: "off"

# ==================================================================================================
#
# Scripts
#
# The scenes are in the order of:
# - All Light Zone per hub
# - Rooms
#   - Bathroom1
#   - Bathroom2
#   - Bedroom1
#   - Bedroom2
#   - Bedroom3
#   - Den
#   - Dining Room
#   - Entry Way
#   - Great Room
#   - Hallway
#   - Kitchen
#   - Living Room
#   - Stairwell
#   - Storage1
#   - Storage2
# - Zones
# 
#
# ==================================================================================================
script:
  light_update_scene_homeassistant:
    alias: "[Light] Update Home Assistant Scenes"
    mode: single
    sequence:

      # ============================================================================================
      #
      # Whole Hub Scenes
      #
      # ============================================================================================
      - service: rest_command.light_update_bf1_all_scene
        data:
          scene_id: "cd29377b-333f-4e4d-97ef-5d2a8989c7ac"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ min(states("sensor.global_dummy_light_color_temperature") | int(367), 454) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - service: rest_command.light_update_mf1_all_scene
        data:
          scene_id: "00bcb261-964a-4ac3-82ac-3c74aa51d032"
          username: !secret hue1_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      # - service: rest_command.light_update_mf2_all_scene
      #   data:
      #     scene_id: ""
      #     username: !secret hue1_username
      #     color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
      #     brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
      #     on_state: '"on":{"on":true}'

      # We now add a delay to not overwhelm the bridge
      - alias: "Wait 1s"
        delay: 1

      # ============================================================================================
      #
      # Room Scenes
      #
      # ============================================================================================
      - service: rest_command.light_update_mf1_bathroom1_inner_scene
        data:
          scene_id: "2432a16d-f38e-44d0-8e9a-dfd9fc8c52ab"
          username: !secret hue1_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - service: rest_command.light_update_bf1_den_scene
        data:
          scene_id: "0f9f63be-31df-4505-9987-501832f400a8"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ min(states("sensor.global_dummy_light_color_temperature") | int(367), 454) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'
          
      - service: rest_command.light_update_mf2_great_room_scene
        data:
          scene_id: "398ffc64-071c-4fa1-a33f-4ef8cc4f89f5"
          username: !secret hue3_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update_mf1_bathroom1_outer_scene
        data:
          scene_id: "99e63811-fc9f-4ad0-b712-5dd575e1bc1b"
          username: !secret hue1_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - service: rest_command.light_update_bf1_hallway_scene
        data:
          scene_id: "bfd009cc-04c3-4ec1-9b84-3e4cf7a1f26b"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ min(states("sensor.global_dummy_light_color_temperature") | int(367), 454) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update_mf1_bathroom2_scene
        data:
          scene_id: "708833ae-9008-4556-bc0f-643c36028f59"
          username: !secret hue1_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - service: rest_command.light_update_bf1_kitchen_scene
        data:
          scene_id: "219d0744-3281-4c45-9ec5-eba633e84531"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update_mf1_bedroom1_scene
        data:
          scene_id: "f2198ad0-543a-4471-9013-fa093ddfb733"
          username: !secret hue1_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - service: rest_command.light_update_bf1_stairwell_scene
        data:
          scene_id: "1f6a1c2d-7341-4af1-ba63-5d95fcde2923"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update_mf1_hallway_scene
        data:
          scene_id: "a929088b-0969-452b-8639-f6bda89e9cbb"
          username: !secret hue1_username
          color: '"color_temperature":{ "mirek":{{ min(states("sensor.global_dummy_light_color_temperature") | int(367), 454) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - service: rest_command.light_update_bf1_storage1_scene
        data:
          scene_id: "5fc4332e-99ab-4ef6-9f29-279dfd870845"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      # Storage 2 Scenes
      - service: rest_command.light_update_bf1_storage2_scene
        data:
          scene_id: "2c9205dd-a2e2-478f-9bd7-98f91ab7e2a3"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'


      # ============================================================================================
      #
      # Light Fixtures
      #
      # ============================================================================================
      - service: rest_command.light_update_mf1_bedroom1_cf1_scene
        data:
          scene_id: "8b693fc1-31a8-4d8a-96ee-0e5263c63a23"
          username: !secret hue1_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - service: rest_command.light_update_bf1_den_cf1_scene
        data:
          scene_id: "8192ffdb-57ba-4843-bbef-844b9b6df5d8"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - service: rest_command.light_update_mf2_den_lamp1_scene
        data:
          scene_id: "1ea99d32-fe4b-4309-b3df-e0bc86f921a9"
          username: !secret hue3_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      # Bedroom1 Lamp1
      - service: rest_command.light_update_mf1_bedroom1_lamp1_scene
        data:
          scene_id: "b0f852ac-bc4e-40f3-a06b-a08ae45060f3"
          username: !secret hue1_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - service: rest_command.light_update_bf1_den_cf2_scene
        data:
          scene_id: "d0decaba-82b2-4475-8747-a636a373ef1e"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ min(states("sensor.global_dummy_light_color_temperature") | int(367), 454) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - service: rest_command.light_update_mf2_den_lamp2_scene
        data:
          scene_id: "f68c834d-9fa2-4c26-93d7-4e1be616bbce"
          username: !secret hue3_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update_mf1_bedroom1_lamp2_scene
        data:
          scene_id: "c5edaba2-676c-4e27-a49a-248a7b670cf0"
          username: !secret hue1_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - service: rest_command.light_update_bf1_den_lamp1_scene
        data:
          scene_id: "dfe07596-feed-47bd-a6ef-fdeb8fa5f97b"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ min(states("sensor.global_dummy_light_color_temperature") | int(367), 454) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - service: rest_command.light_update_mf2_den_lamp5_scene
        data:
          scene_id: "701a9848-82f0-42b7-a575-e3cda950932d"
          username: !secret hue3_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update_mf1_hallway_cf_scene
        data:
          scene_id: "1b10ab73-db72-45b7-932f-0bef76fe86ce"
          username: !secret hue1_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - service: rest_command.light_update_bf1_den_lamp2_scene
        data:
          scene_id: "c9b7da7b-1cb7-42c5-b9d4-55d9daf0bd64"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update_mf1_hallway_lamp1_scene
        data:
          scene_id: "8ab64aef-f206-4d73-8fd8-47e280294f70"
          username: !secret hue1_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - service: rest_command.light_update_bf1_den_lamp3_scene
        data:
          scene_id: "486010da-61a3-45d7-b37d-5102a9fb3694"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ min(states("sensor.global_dummy_light_color_temperature") | int(367), 454) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'


  # ================================================================================================
  #
  # This next script is not run often.  Since the migraine automations are based on detecting if the
  # color of the light has been set to xy: [0.17, 0.7], then we need to ensure if the scene has been
  # modified in the hue app (or some other external app) when adding a light, etc that the values
  # are properly set.
  #
  # ================================================================================================
  # light_update_scene_migraine:
  #   alias: "[Light] Update Migraine Scenes"
  #   sequence:

  # ================================================================================================
  #
  # Flash Lights
  #
  # ================================================================================================
  flash_lights:
    alias: Flash lights
    sequence:
      - service: light.turn_on
        data_template:
          entity_id: "light.{{ light }}"
      - repeat:
          count: 60
          sequence:
            - delay: 2.5
            - service: light.toggle
              data_template:
                entity_id: "light.{{ light }}"
    mode: restart

  # ================================================================================================
  #
  # The next two scripts save the current light state before activating a hue scene, and
  # upon deactivation restore the previous state.
  #
  # ================================================================================================
  activate_hue_dynamic_scene:
    alias: "[Light] All: Activate Hue dynamic scene"
    mode: restart
    icon: mdi:power
    sequence:
      - condition: >
          {{is_state('binary_sensor.light_all_selected_hue_group_active_scene','off')}}
      # first record current state of lights in the selected group
      - service: scene.create
        data:
          scene_id: before_dynamic_scene
          snapshot_entities:
            - >
              {% set select = states('input_select.hue_group')|slugify %}
              {% set group ='light.' + select %}
              {{group}}
      - service: hue.activate_scene
        data:
          dynamic: true
          speed: >
            {{states('input_number.hue_dynamic_scene_speed')|int}}
          brightness: >
            {{states('input_number.hue_dynamic_scene_brightness')|int}}
        target:
          entity_id: >
            {% set select = states('input_select.hue_dynamic_scene')|slugify %}
            {{'scene.' + select}}

  deactivate_hue_dynamic_scene:
    alias: "[Light] All: Deactivate Hue dynamic scene"
    mode: restart
    icon: mdi:power-off
    sequence:
      - condition: >
          {{is_state('binary_sensor.light_all_selected_hue_group_active_scene','on')}}
      - service: hue.activate_scene
        data:
          dynamic: false
        target:
          entity_id: >
            {% set select = states('input_select.hue_dynamic_scene')|slugify %}
            {{'scene.' + select}}
      # reset the lights to the state before the dynamic scene activation
      - service: scene.turn_on
        target:
          entity_id: scene.before_dynamic_scene

# ==================================================================================================
#
# Templates
#
# ==================================================================================================
template:
  - binary_sensor:
      - unique_id: "4fd1dd66-c51b-474d-9de7-da4dfd5cc398"
        name: "Circadian Mode"
        state: "{{ is_state('input_select.light_mode', 'Circadian') }}"

      - unique_id: "1fb06868-f4c9-4d0b-be18-7299a9f1fd25"
        name: "[Light] All: Selected Hue group active scene"
        state: >
          {% set select = states('input_select.hue_group')|slugify %}
          {% set group ='light.' + select %}
          {{is_state_attr(group,'dynamics',true)}}

      - unique_id: "9b9548fe-448e-40ea-bf3d-360bc1f1b36f"
        name: "[Light] All: Selected Hue group has active scenes available"
        state: >
          {% set hue_group = states('input_select.hue_group') %}
          {{states.scene
          |selectattr('attributes.group_name','eq',hue_group)
          |selectattr('attributes.is_dynamic','eq',true)|list|length != 0}}

      - unique_id: "61549b92-7137-44bd-adab-3834eb1c634f"
        name: "[Light] All: Hue groups dynamic scening"
        state: >
          {{states.light|selectattr('attributes.dynamics','eq',true)|list|length != 0}}


  - sensor:
      - unique_id: "0639ee4e-55ff-41af-a903-ff6db2660b1e"
        name: "Global Dummy Light Brightness"
        state: >-
          {% if state_attr("switch.global_dummy_light_adaptive_lighting", "brightness_pct") is number %}
            {{ state_attr("switch.global_dummy_light_adaptive_lighting", "brightness_pct") | int(100) }}
          {% else %}
            100
          {% endif %}
        unit_of_measurement: "%"

      - unique_id: "0e8a672a-9db0-40bd-9727-d0b206802b80"
        name: "Global Dummy Light Color Temperature"
        state: >-
          {% if is_state("input_select.light_mode", "Migraine") %}
            {{ max(state_attr("switch.global_dummy_light_adaptive_lighting", "color_temp_mired") | int(367), 285) }}
          {% else %}
            {{ state_attr("switch.global_dummy_light_adaptive_lighting", "color_temp_mired") | int(367) }}
          {% endif %}
        state_class: measurement

      - unique_id: "48f9f765-7fa8-4b6c-b18b-9a0ab378f57c"
        name: "Global Dummy Light Color Temperature (Kelvin)"
        state: >-
          {% if is_state("input_select.light_mode", "Migraine") %}
            {{ min(state_attr("switch.global_dummy_light_adaptive_lighting", "color_temp_kelvin") | int(2700), 3500) }}
          {% else %}
            {{ state_attr("switch.global_dummy_light_adaptive_lighting", "color_temp_kelvin") | int(2700) }}
          {% endif %}
        state_class: measurement
        unit_of_measurement: "°K"

# ==================================================================================================
#
# Timers
#
# ==================================================================================================
timer:
  lights_off:
    name: 'Lights off timer'
    duration: '00:30:00'
