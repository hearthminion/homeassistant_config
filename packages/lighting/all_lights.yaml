---
# ==================================================================================================
#
# Settings, automations, etc that are common to all lights in all rooms.
#
# ==================================================================================================
adaptive_lighting:
  - name: "Global: Dummy Light (Color)"
    initial_transition: 1
    min_color_temp: 2000
    max_color_temp: 6500

  - name: "Global: Dummy Light"
    initial_transition: 1
    min_color_temp: 2200
    max_color_temp: 6500

# ==================================================================================================
#
# Automations
#
# ==================================================================================================
automation:
  - id: "65d7e60e-4e39-460b-a319-b65f497b6465"
    alias: "[Light] Global: All Lights - Enable Automations"
    description: ""
    trigger:
      - event: start
        platform: homeassistant
    condition: []
    action:
      - scene: scene.light_bf1_all_enable_automations
      - scene: scene.light_bf1_den_enable_automations
      - scene: scene.light_bf1_hallway_enable_automations
      - scene: scene.light_global_all_enable_automations
      - scene: scene.light_mf1_bedroom1_enable_automations
      - scene: scene.light_mf2_den_enable_automations

  - id: "a3ed2024-e1a9-4ac8-8dca-80cc62812fcf"
    alias: "[Light] Global: All Lights - Adaptive Lighting (Toggle)"
    description: ''
    initial_state: false
    trigger:
      - platform: state
        entity_id: binary_sensor.circadian_mode
    variables:
      circadian_mode: "{{ states('binary_sensor.circadian_mode') }}"
    condition: []
    action:
      - service: "switch.turn_{{ circadian_mode }}"
        data:
          entity_id:
            - switch.adaptive_lighting_bf1_den_cf1
            - switch.adaptive_lighting_bf1_den_cf2
            - switch.adaptive_lighting_bf1_den_lamp1
            - switch.adaptive_lighting_bf1_den_lamp2
            - switch.adaptive_lighting_bf1_den_lamp3
            - switch.adaptive_lighting_bf1_hallway
            - switch.adaptive_lighting_bf1_kitchen
            - switch.adaptive_lighting_bf1_stairwell
            - switch.adaptive_lighting_bf1_storage1
            - switch.adaptive_lighting_bf1_storage2
            - switch.adaptive_lighting_mf1_bedroom1_lamp2
            - switch.adaptive_lighting_mf2_den_lamp2
            #- switch.adaptive_lighting_mf1_bathroom1_inner
            #- switch.adaptive_lighting_mf2_den_couch_lamp_1
            #- switch.adaptive_lighting_mf1_bedroom1_cf1
            #- switch.adaptive_lighting_mf1_bedroom1_lamp1

  # ================================================================================================
  #
  #
  #
  # This automation is to ensure that the adaptive lighting switch for the global dummy light is
  # NEVER turned off.  This 'light' is used for sensor purposes only, and all other automations
  # will break if it is ever turned off.
  #
  # ================================================================================================
  - id: "7e6a8e75-fa0a-43f9-8d47-98295ccafc07"
    alias: "[Light] Global: Dummy Light - Adaptive Lighting (Turn On)"
    description: ""
    initial_state: false
    trigger:
      - platform: state
        entity_id: switch.adaptive_lighting_global_dummy_light
        from: "on"
        to: "off"
      - platform: state
        entity_id: switch.adaptive_lighting_adapt_brightness_global_dummy_light
        from: "on"
        to: "off"
      - platform: state
        entity_id: switch.adaptive_lighting_global_dummy_light_color
        from: "on"
        to: "off"
      - platform: state
        entity_id: switch.adaptive_lighting_adapt_brightness_global_dummy_light_color
        from: "on"
        to: "off"
    condition: []
    action:
      - service: "switch.turn_on"
        data:
          entity_id:
            - switch.adaptive_lighting_global_dummy_light
            - switch.adaptive_lighting_adapt_brightness_global_dummy_light

  # ================================================================================================
  #
  # Set Lighting Mode: Circadian
  #
  # Trigger:
  # - In the morning when the sun rises to 18 degrees below the horizon
  #   enable
  #
  # Actions:
  #
  # ================================================================================================
  - id: "087bce7b-c92f-4c05-a3ba-22949cb79e61"
    alias: "[Light] Set Light Mode: Circadian"
    description: ""
    initial_state: false
    trigger:
      - platform: numeric_state
        entity_id: sun.sun
        value_template: "{{ state_attr('sun.sun', 'elevation') }}"
        above: -18
    condition: []
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.light_mode
          option: "Circadian"

  # ================================================================================================
  #
  # Set Lighting Mode: Darken House
  #
  # Trigger:
  # - When the timer that begins the nighttime routine finishes
  #
  # Actions:
  #
  # ================================================================================================
  - id: "ed400d67-ffec-489a-9d90-1a589baa6910"
    alias: "[Light] Set Light Mode: Darken House"
    description: ""
    initial_state: false
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.lights_off
    condition: []
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.light_mode
          option: "Darken House"

  # ================================================================================================
  #
  # Set Lighting Mode: Migraine
  #
  # Trigger:
  # - Input Boolean: Special Migraine Mode is set to true
  #
  # Actions:
  # - 
  # ================================================================================================
  - id: "1b4dd01f-acb1-4462-b14a-7d818f12787b"
    alias: "[Light] Set Light Mode: Migraine"
    description: ""
    initial_state: false
    trigger:
      - platform: state
        entity_id: input_boolean.special_migraine_mode
        to: "on"
    action:
      - service: input_select.select_option
        data_template:
          entity_id: input_select.light_mode
          option: "Migraine"

  - id: "387e7772-a2c3-4d29-b524-8aa36fbc65b2"
    alias: "[Light] Migraine Mode - Enable"
    description: ""
    initial_state: false
    trigger:
      - entity_id: sensor.light_mf_den_couch_lamp_2_color
        platform: state
        to: (0.17, 0.7)
      - entity_id: sensor.light_bf_den_color
        platform: state
        to: (0.17, 0.7)
      - entity_id: sensor.light_mf_bedroom_1_lamp_2_color
        platform: state
        to: (0.17, 0.7)
    condition: []
    action:
      - entity_id: input_boolean.special_migraine_mode
        service: input_boolean.turn_on

  # ================================================================================================
  #
  # Set Lighting Mode: Guests
  #
  # Trigger:
  # - Input Boolean: Special Guest Mode is set to true
  #
  # Actions:
  # -
  #
  # ================================================================================================
  - id: "049e19ec-4370-427d-a080-8fece7a2ca6d"
    alias: "[Light] Set Light Mode: Guests"
    description: ""
    initial_state: false
    trigger:
      - platform: state
        entity_id: input_boolean.special_guest_present
        from: "off"
        to: "on"
    condition: []
    action:
      data:
        entity_id: input_select.light_mode
        option: "Guests"
      service: input_select.select_option

  # ================================================================================================
  #
  # Update HomeAssistant Scene on Hue Bridge
  #
  # Runs every 5 minutes while light mode is "circadian"
  #
  # ================================================================================================
  - id: "b9267e40-af1c-4f92-bb98-e6839787cc97"
    alias: "[Light] Update HomeAssistant Scene on Hue Bridges (Circadian)"
    description: ""
    initial_state: false
    trigger:
      - platform: time_pattern
        minutes: "/5"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.light_update_scene_homeassistant_circadian
    mode: single

  - id: "ac5fbf47-d0d4-4ae1-9858-1522f3d96fa3"
    alias: "[Light] Update HomeAssistant Scene on Hue Bridges (Migraine)"
    description: ""
    initial_state: false
    trigger:
      - platform: state
        entity_id: input_select.light_mode
        to: "Migraine"
    condition: []
    action:
      - alias: "Wait 5s"
        delay: 5
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.light_update_scene_homeassistant_circadian
    mode: single

  # ================================================================================================
  #
  # Starts a 30 minute timer when all lights are turned off
  #
  # ================================================================================================
  - id: "918ded3c-579d-4b16-8511-f89d881b0103"
    alias: "Start Sleep Timer"
    description: "Starts a timer upon going to bed."
    trigger:
      - platform: time
        at: "21:00:00"
      - platform: state
        entity_id: light.all_lights
        to: "off"
      - platform: state
        entity_id: light.mf1_bedroom1_lamp1
        from: "on"
        to: "off"
      - platform: state
        entity_id: light.mf1_bedroom1_lamp2
        from: "on"
        to: "off"
    condition:
      - condition: time
        after: "21:00:00"
      - condition: state
        entity_id: light.mf1_bedroom1_lamp1
        state: "off"
      - condition: state
        entity_id: light.mf1_bedroom1_lamp2
        state: "off"
    action:
      - service: timer.start
        data:
          entity_id: timer.lights_off

# ==================================================================================================
#
# Input select
#
# ==================================================================================================
input_select:
  light_mode:
    name: "Light Mode"
    options:
      - "Circadian"
      - "Darken House"
      - "Migraine"
      - "Sleeping (Migraine)"
      - "Night Out"
      - "Guests"
      - "Other"

# ==================================================================================================
#
# Light Groups
#
# ==================================================================================================
light:
  - platform: group
    name: "All lights"
    entities:
      - light.bf_all
      - light.mf_all

# ==================================================================================================
#
# Scenes
#
# ==================================================================================================
scene:
  - id: "e697c216-b8c7-4825-9f40-4fd01d220d40"
    name: "[Light] Global: All - Enable Automations"
    entities:
      automation.light_set_light_mode_circadian:
        state: 'on'
      automation.light_set_light_mode_guests:
        state: 'on'
      automation.light_set_light_mode_migraine:
        state: 'on'
      automation.light_set_light_mode_darken_house:
        state: 'on'
      automation.light_enable_migraine_mode:
        state: 'on'
      automation.light_adaptive_lighting_toggle:
        state: 'on'
      automation.light_update_homeassistant_scene_on_hue_bridges:
        state: 'on'
      automation.light_global_dummy_light_adaptive_lighting_turn_on:
        state: 'on'

  - id: "f0bb567c-050e-4499-b46e-99697efa5de7"
    name: "[Light] Global: All - Bright"
    entities:
      light.all_lights:
        state: "on"
        color_temp: 367
        brightness: 255

  - id: "8a92e9aa-49e5-4bbd-a4ea-dba3bbc2563d"
    name: "[Light] Global: All - Concentrate"
    entities:
      light.all_lights:
        state: "on"
        color_temp: 230
        brightness: 255

  - id: "64e2926b-5a5d-4589-92aa-4d753ed2c685"
    name: "[Light] Global: All - Dimmed"
    entities:
      light.all_lights:
        state: "on"
        color_temp: 369
        brightness: 76

  - id: "84c9f8e2-a645-483b-9d63-e16d200546a8"
    name: "[Light] Global: All - Energize"
    entities:
      light.all_lights:
        state: "on"
        color_temp: 156
        brightness: 255

  - id: "f7fd82cd-02f2-4c17-b5c5-be6611659130"
    name: "[Light] Global: All - Nightlight"
    entities:
      light.all_lights:
        state: "on"
        color_temp: 454
        brightness: 1

  - id: "32aed744-19d7-4260-a1dc-bb172493f0e9"
    name: "[Light] Global: All - Read"
    entities:
      light.all_lights:
        state: "on"
        color_temp: 343
        brightness: 255

  - id: "295a2eed-8920-4163-8759-12b0637e9697"
    name: "[Light] Global: All - Relax"
    entities:
      light.all_lights:
        state: "on"
        color_temp: 447
        brightness: 145

  - id: "2a718d75-7592-445e-9693-88bebf0f40c3"
    name: "[Light] Global: All - Off"
    entities:
      light.all_lights:
        state: "off"

# ==================================================================================================
#
# Scripts
#
# Hue Scenes
#   - Basement: cd29377b-333f-4e4d-97ef-5d2a8989c7ac
#     bf_den_lamp1: dfe07596-feed-47bd-a6ef-fdeb8fa5f97b
# 
#
# ==================================================================================================
script:
  light_update_scene_homeassistant_circadian:
    alias: "[Light] Update Home Assistant Scenes (Circadian)"
    mode: single
    sequence:

      - service: rest_command.light_update_bf1_all_scene
        data:
          scene_id: "cd29377b-333f-4e4d-97ef-5d2a8989c7ac"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      # - service: rest_command.light_update_mf1_all
      #   data:
      #     scene_id: "cd29377b-333f-4e4d-97ef-5d2a8989c7ac"
      #     username: !secret hue2_username
      #     color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
      #     brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
      #     on_state: '"on":{"on":true}'

      # - service: rest_command.light_update_mf2_all
      #   data:
      #     scene_id: "cd29377b-333f-4e4d-97ef-5d2a8989c7ac"
      #     username: !secret hue2_username
      #     color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
      #     brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
      #     on_state: '"on":{"on":true}'

      # We now add a delay to not overwhelm the bridge
      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update_bf1_den_lamp1_scene
        data:
          scene_id: "dfe07596-feed-47bd-a6ef-fdeb8fa5f97b"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      # - service: rest_command.light_update_mf1_bedroom1_lamp1_scene
      #   data:
      #     scene_id: ""
      #     username: !secret hue1_username
      #     color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
      #     brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
      #     on_state: '"on":{"on":true}'

      - service: rest_command.light_update_mf2_den_lamp1_scene
        data:
          scene_id: "74901b3e-36a0-4037-981d-c591f5e26fae"
          username: !secret hue1_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update_bf1_den_lamp2_scene
        data:
          scene_id: "c9b7da7b-1cb7-42c5-b9d4-55d9daf0bd64"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - service: rest_command.light_update_mf2_den_lamp2_scene
        data:
          scene_id: "5930f3ac-b8c5-4ed9-a731-5cb2b0d329ad"
          username: !secret hue1_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - service: rest_command.light_update_mf1_bedroom1_lamp2_scene
        data:
          scene_id: "c5edaba2-676c-4e27-a49a-248a7b670cf0"
          username: !secret hue1_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update_bf1_den_lamp3_scene
        data:
          scene_id: "486010da-61a3-45d7-b37d-5102a9fb3694"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update_bf1_den_cf1_scene
        data:
          scene_id: "8192ffdb-57ba-4843-bbef-844b9b6df5d8"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update_bf1_den_cf2_scene
        data:
          scene_id: "d0decaba-82b2-4475-8747-a636a373ef1e"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      # - service: rest_command.light_update_bf1_kitchen_cf1_scene
      #   data:
      #     scene_id: "6834d2a0-86ac-45bf-98ee-54d2ed34ce89"
      #     username: !secret hue1_username
      #     color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
      #     brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
      #     on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      # - service: rest_command.light_update_bf1_storage1_cf1_scene
      #   data:
      #     scene_id: "d39787a3-3cdd-454d-be3b-9677260d0335"
      #     username: !secret hue1_username
      #     color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
      #     brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
      #     on_state: '"on":{"on":true}'

      # - alias: "Wait 1s"
      #   delay: 1

      # - service: rest_command.light_update_bf1_storage1_cf2_scene
      #   data:
      #     scene_id: "c04e59af-076b-4508-bb56-428b82f6ef8a"
      #     username: !secret hue1_username
      #     color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
      #     brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
      #     on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      # - service: rest_command.light_update_bf1_stairwell_scene
      #   data:
      #     scene_id: "1f6a1c2d-7341-4af1-ba63-5d95fcde2923"
      #     username: !secret hue1_username
      #     color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
      #     brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
      #     on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      # - service: rest_command.light_update_bf1_kitchen_scene
      #   data:
      #     scene_id: "219d0744-3281-4c45-9ec5-eba633e84531"
      #     username: !secret hue1_username
      #     color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
      #     brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
      #     on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update_bf1_den_scene
        data:
          scene_id: "0f9f63be-31df-4505-9987-501832f400a8"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update_bf1_hallway_scene
        data:
          scene_id: "bfd009cc-04c3-4ec1-9b84-3e4cf7a1f26b"
          username: !secret hue2_username
          color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
          brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
          on_state: '"on":{"on":true}'

  # ================================================================================================
  #
  # This next script is not run often.  Since the migraine automations are based on detecting if the
  # color of the light has been set to xy: [0.17, 0.7], then we need to ensure if the scene has been
  # modified in the hue app (or some other external app) when adding a light, etc that the values
  # are properly set.
  #
  # ================================================================================================
  light_update_scene_homeassistant_migraine:
    alias: "[Light] Update Home Assistant Scenes (Migraine)"
    sequence:

      # - service: rest_command.light_update_bf1_all_scene
      #   data:
      #     scene_id: "cd29377b-333f-4e4d-97ef-5d2a8989c7ac"
      #     username: !secret hue2_username
      #     color: '"color":{ "xy":{ "x": 0.17, "y": 0.7 }'
      #     brightness: '"dimming":{ "brightness": 25.0 }'
      #     on_state: '"on":{"on":true}'

      # - service: rest_command.light_update_mf1_all
      #   data:
      #     scene_id: "cd29377b-333f-4e4d-97ef-5d2a8989c7ac"
      #     username: !secret hue2_username
      #     color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
      #     brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
      #     on_state: '"on":{"on":true}'

      # - service: rest_command.light_update_mf2_all
      #   data:
      #     scene_id: "cd29377b-333f-4e4d-97ef-5d2a8989c7ac"
      #     username: !secret hue2_username
      #     color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
      #     brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
      #     on_state: '"on":{"on":true}'

      # We now add a delay to not overwhelm the bridge
      # - alias: "Wait 1s"
      #   delay: 1

      # - service: rest_command.light_update_bf1_den_lamp1_scene
      #   data:
      #     scene_id: "dfe07596-feed-47bd-a6ef-fdeb8fa5f97b"
      #     username: !secret hue2_username
      #     color: '"color":{ "xy":{ "x": 0.17, "y": 0.7 }'
      #     brightness: '"dimming":{ "brightness": 25.0 }'
      #     on_state: '"on":{"on":true}'

      # - service: rest_command.light_update_mf1_bedroom1_lamp1_scene
      #   data:
      #     scene_id: ""
      #     username: !secret hue1_username
      #     color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
      #     brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
      #     on_state: '"on":{"on":true}'

      - service: rest_command.light_update_mf1_den_lamp1_scene
        data:
          scene_id: "74901b3e-36a0-4037-981d-c591f5e26fae"
          username: !secret hue1_username
          color: '"color":{ "xy":{ "x": 0.17, "y": 0.7 }'
          brightness: '"dimming":{ "brightness": 25.0 }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update_bf1_den_lamp2_scene
        data:
          scene_id: "c9b7da7b-1cb7-42c5-b9d4-55d9daf0bd64"
          username: !secret hue2_username
          color: '"color":{ "xy":{ "x": 0.17, "y": 0.7 }'
          brightness: '"dimming":{ "brightness": 25.0 }'
          on_state: '"on":{"on":true}'

      - service: rest_command.light_update_mf1_den_lamp2_scene
        data:
          scene_id: "5930f3ac-b8c5-4ed9-a731-5cb2b0d329ad"
          username: !secret hue1_username
          color: '"color":{ "xy":{ "x": 0.17, "y": 0.7 }'
          brightness: '"dimming":{ "brightness": 25.0 }'
          on_state: '"on":{"on":true}'

      - service: rest_command.light_update_mf1_bedroom1_lamp2_scene
        data:
          scene_id: "c5edaba2-676c-4e27-a49a-248a7b670cf0"
          username: !secret hue1_username
          color: '"color":{ "xy":{ "x": 0.17, "y": 0.7 }'
          brightness: '"dimming":{ "brightness": 25.0 }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update_bf1_den_lamp3_scene
        data:
          scene_id: "486010da-61a3-45d7-b37d-5102a9fb3694"
          username: !secret hue2_username
          color: '"color":{ "xy":{ "x": 0.17, "y": 0.7 }'
          brightness: '"dimming":{ "brightness": 25.0 }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update_bf1_den_cf1_scene
        data:
          scene_id: "8192ffdb-57ba-4843-bbef-844b9b6df5d8"
          username: !secret hue2_username
          color: '"color":{ "xy":{ "x": 0.17, "y": 0.7 }'
          brightness: '"dimming":{ "brightness": 25.0 }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update_bf1_den_cf2_scene
        data:
          scene_id: "d0decaba-82b2-4475-8747-a636a373ef1e"
          username: !secret hue2_username
          color: '"color":{ "xy":{ "x": 0.17, "y": 0.7 }'
          brightness: '"dimming":{ "brightness": 25.0 }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      # - service: rest_command.light_update_bf1_kitchen_cf1_scene
      #   data:
      #     scene_id: "6834d2a0-86ac-45bf-98ee-54d2ed34ce89"
      #     username: !secret hue1_username
      #     color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
      #     brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
      #     on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      # - service: rest_command.light_update_bf1_storage1_cf1_scene
      #   data:
      #     scene_id: "d39787a3-3cdd-454d-be3b-9677260d0335"
      #     username: !secret hue1_username
      #     color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
      #     brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
      #     on_state: '"on":{"on":true}'

      # - alias: "Wait 1s"
      #   delay: 1

      # - service: rest_command.light_update_bf1_storage1_cf2_scene
      #   data:
      #     scene_id: "c04e59af-076b-4508-bb56-428b82f6ef8a"
      #     username: !secret hue1_username
      #     color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
      #     brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
      #     on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      # - service: rest_command.light_update_bf1_stairwell_scene
      #   data:
      #     scene_id: "1f6a1c2d-7341-4af1-ba63-5d95fcde2923"
      #     username: !secret hue1_username
      #     color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
      #     brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
      #     on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      # - service: rest_command.light_update_bf1_kitchen_scene
      #   data:
      #     scene_id: "219d0744-3281-4c45-9ec5-eba633e84531"
      #     username: !secret hue1_username
      #     color: '"color_temperature":{ "mirek":{{ states("sensor.global_dummy_light_color_temperature") | int(367) }} }'
      #     brightness: '"dimming":{ "brightness": {{ states("sensor.global_dummy_light_brightness") | int(100) }} }'
      #     on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update1_bf_den_scene
        data:
          scene_id: "0f9f63be-31df-4505-9987-501832f400a8"
          username: !secret hue2_username
          color: '"color":{ "xy":{ "x": 0.17, "y": 0.7 }'
          brightness: '"dimming":{ "brightness": 25.0 }'
          on_state: '"on":{"on":true}'

      - alias: "Wait 1s"
        delay: 1

      - service: rest_command.light_update_bf1_hallway_scene
        data:
          scene_id: "bfd009cc-04c3-4ec1-9b84-3e4cf7a1f26b"
          username: !secret hue2_username
          color: '"color":{ "xy":{ "x": 0.17, "y": 0.7 }'
          brightness: '"dimming":{ "brightness": 25.0 }'
          on_state: '"on":{"on":true}'

# ==================================================================================================
#
# Templates
#
# ==================================================================================================
template:
  - binary_sensor:
      - unique_id: "4fd1dd66-c51b-474d-9de7-da4dfd5cc398"
        name: "Circadian Mode"
        state: "{{ states('input_select.light_mode') == 'Circadian' }}"

  - sensor:
      - unique_id: "0639ee4e-55ff-41af-a903-ff6db2660b1e"
        name: "Global Dummy Light Brightness"
        state: >-
          {% if state_attr("switch.adaptive_lighting_global_dummy_light", "brightness_pct") == None or
          is_state_attr("switch.adaptive_lighting_global_dummy_light", "brightness_pct", "unknown") or
          is_state_attr("switch.adaptive_lighting_global_dummy_light", "brightness_pct", "off") %}
            100
          {% else %}
            {{ state_attr("switch.adaptive_lighting_global_dummy_light", "brightness_pct") | int(100) }}
          {% endif %}
        unit_of_measurement: "%"

      - unique_id: "0e8a672a-9db0-40bd-9727-d0b206802b80"
        name: "Global Dummy Light Color Temperature"
        state: >-
          {% if state_attr("switch.adaptive_lighting_global_dummy_light", "color_temp_mired") == None or
          is_state_attr("switch.adaptive_lighting_global_dummy_light", "color_temp_mired", "unknown") or
          is_state_attr("switch.adaptive_lighting_global_dummy_light", "color_temp_mired", "off") %}
            {% if states('input_select.light_mode') == 'Migraine' %}
              454
            {% else %}
              367
            {% endif %}
          {% else %}
            {{ state_attr("switch.adaptive_lighting_global_dummy_light", "color_temp_mired") | int(367) }}
          {% endif %}
        state_class: measurement

      - unique_id: "b1d5d4a1-b617-4984-b951-0ce70cdf9c52"
        name: "Global Dummy Light (Color) Color Temperature"
        state: >-
          {% if state_attr("switch.adaptive_lighting_global_dummy_light_color", "color_temp_mired") == None or
          is_state_attr("switch.adaptive_lighting_global_dummy_light_color", "color_temp_mired", "unknown") or
          is_state_attr("switch.adaptive_lighting_global_dummy_light_color", "color_temp_mired", "off") %}
            {% if states('input_select.light_mode') == 'Migraine' %}
              500
            {% else %}
              367
            {% endif %}
          {% else %}
            {{ state_attr("switch.adaptive_lighting_global_dummy_light_color", "color_temp_mired") | int(367) }}
          {% endif %}
        state_class: measurement

      - unique_id: "48f9f765-7fa8-4b6c-b18b-9a0ab378f57c"
        name: "Global Dummy Light Color Temperature (Kelvin)"
        state: >-
          {% if state_attr("switch.adaptive_lighting_global_dummy_light", "color_temp_kelvin") == None or
             is_state_attr("switch.adaptive_lighting_global_dummy_light", "color_temp_kelvin", "unknown") or
             is_state_attr("switch.adaptive_lighting_global_dummy_light", "color_temp_kelvin", "off") %}
            {% if states('input_select.light_mode') == 'Migraine' %}
              2200
            {% else %}
              2700
            {% endif %}
          {% else %}
            {{ state_attr("switch.adaptive_lighting_global_dummy_light", "color_temp_kelvin") | int(2700) }}
          {% endif %}
        state_class: measurement
        unit_of_measurement: "°K"

      - unique_id: "15cc3369-343d-4f3e-bbdd-c0e3cafa90dc"
        name: "Global Dummy Light (Color) Color Temperature (Kelvin)"
        state: >-
          {% if state_attr("switch.adaptive_lighting_global_dummy_light_color", "color_temp_kelvin") == None or
             is_state_attr("switch.adaptive_lighting_global_dummy_light_color", "color_temp_kelvin", "unknown") or
             is_state_attr("switch.adaptive_lighting_global_dummy_light_color", "color_temp_kelvin", "off") %}
            {% if states('input_select.light_mode') == 'Migraine' %}
              2000
            {% else %}
              2700
            {% endif %}
          {% else %}
            {{ state_attr("switch.adaptive_lighting_global_dummy_light_color", "color_temp_kelvin") | int(2700) }}
          {% endif %}
        state_class: measurement
        unit_of_measurement: "°K"

# ==================================================================================================
#
# Timers
#
# ==================================================================================================
timer:
  lights_off:
    name: 'Lights off timer'
    duration: '00:30:00'
