---
# ==================================================================================================
#
# Master Bathroom Lighting Configuration
#
# ==================================================================================================
adaptive_lighting:
  - name: "MF1: Bathroom1 (Inner)"
    lights: []
    initial_transition: 1
    min_color_temp: 2000
    max_color_temp: 6500

  - name: "MF1: Bathroom1 (Outer)"
    lights: []
    initial_transition: 1
    min_color_temp: 2000
    max_color_temp: 6500

# ==================================================================================================
#
# Input Boolean
#
# ==================================================================================================
input_boolean:
  light_mf1_bathroom1_inner_green_event:
    name: "[Light] MF1: Bathroom1 (Inner) Green Event"

  light_mf1_bathroom1_outer_green_event:
    name: "[Light] MF1: Bathroom1 (Outer) Green Event"

# ==================================================================================================
#
# Input Text
#
# ==================================================================================================
input_text:
  bf1_bathroom1_inner_cf1_bulb1:
    min: 36
    max: 36
  bf1_bathroom1_inner_cf1_bulb2:
    min: 36
    max: 36
  bf1_bathroom1_inner_cf1_bulb3:
    min: 36
    max: 36

  bf1_bathroom1_inner_scene_homeassistant:
    min: 36
    max: 36

# ==================================================================================================
#
# Light Groups
#
# ==================================================================================================
light:
  - platform: group
    name: "MF1: Master Bathroom"
    entities:
      - light.mf1_bathroom1_inner
      - light.mf1_bathroom1_outer

# ==================================================================================================
#
# Rest Command
#
# Light IDs:
# - 05: b2c73c00-1188-4f93-a23e-0267cc038594
#   name: MF1: Bathroom1 (Inner) CF1 Bulb1
# - 06: 3f9a6d23-d966-4ccc-a6d1-39bbcdfd1080
#   name: MF1: Bathroom1 (Inner) CF1 Bulb2
# - 12: d1577871-2836-45c4-bbd9-de9423d526f5
#   name: MF1: Bathroom1 (Inner) CF1 Bulb3
# - 16: fa761fe2-c6e6-4d58-a71c-59f76f54b504
#   name: MF1: Bathroom1 (Outer) CF1 Bulb1
#
# ==================================================================================================
rest_command:
  light_update_mf1_bathroom1_inner_scene:
    url: "https://hue1.iot.home/clip/v2/resource/scene/{{ scene_id }}"
    method: put
    headers:
      hue-application-key: "{{ username }}"
    payload: '{
          "id":"{{ scene_id }}",
          "actions":[
          {
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid":"b2c73c00-1188-4f93-a23e-0267cc038594","rtype":"light"}
          },{
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid":"3f9a6d23-d966-4ccc-a6d1-39bbcdfd1080","rtype":"light"}
          },{
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid":"d1577871-2836-45c4-bbd9-de9423d526f5","rtype":"light"}
          }
          ]
          }'
    verify_ssl: false
    content_type: "application/json"

  light_update_mf1_bathroom1_outer_scene:
    url: "https://hue1.iot.home/clip/v2/resource/scene/{{ scene_id }}"
    method: put
    headers:
      hue-application-key: "{{ username }}"
    payload: '{
          "id":"{{ scene_id }}",
          "actions":[
          {
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid":"fa761fe2-c6e6-4d58-a71c-59f76f54b504","rtype":"light"}
          }
          ]
          }'
    verify_ssl: false
    content_type: "application/json"

# ==================================================================================================
#
# Scenes
#
# ==================================================================================================
#scene:

# ==================================================================================================
#
# Templates
#
# ==================================================================================================
template:
  - binary_sensor:
      - unique_id: "7d2b1660-4de9-47ef-b3a4-53e057ed8fc4"
        name: "[Light] MF1: Bathroom1 (Inner) - Autobrightness"
        state: >-
          {{ (
               states("sensor.global_dummy_light_brightness") | int(100) ) <
               ( state_attr("binary_sensor.mf1_bathroom1_inner_autobrightness", "brightness_max")
               | int(104) )
             and ( states("sensor.global_dummy_light_brightness") | int(100) ) >
             ( state_attr("binary_sensor.mf1_bathroom1_inner_autobrightness", "brightness_min") | int(100)
             ) }}
        attributes:
          brightness: >-
            {% if state_attr("light.mf1_bathroom1_inner", "brightness") == None or
               is_state_attr("light.mf1_bathroom1_inner", "brightness", "unknown") or
               is_state("light.mf1_bathroom1_inner", "off") %}
              {{ ( states("sensor.global_dummy_light_brightness") | int(100) ) }}
            {% else %}
              {{ ( state_attr("light.mf1_bathroom1_inner","brightness") / 254 * 100 ) | int(100) }}
            {% endif %}
          brightness_max: >-
            {{ state_attr("binary_sensor.mf1_bathroom1_inner_autobrightness", "brightness") | int(100) + 4 }}
          brightness_min: >-
            {{ state_attr("binary_sensor.mf1_bathroom1_inner_autobrightness", "brightness") | int(100) - 4 }}

      - unique_id: "86b53ab7-d519-4cb3-aa7e-6c738b589bb2"
        name: "MF1: Bathroom1 (Inner) - Autocolor"
        state: >-
          {{ ( states("sensor.global_dummy_light_color_temperature") | int(367) ) <
               ( state_attr("binary_sensor.mf1_bathroom1_inner_autocolor", "color_temp_max")
               | int(382) )
             and ( states("sensor.global_dummy_light_color_temperature") | int(367) ) >
               ( state_attr("binary_sensor.mf1_bathroom1_inner_autocolor", "color_temp_min")
               | int(352))
             }}
        attributes:
          color_temp: >-
            {% if state_attr("light.mf1_bathroom1_inner", "color_temp") is number %}
              {{ state_attr("light.mf1_bathroom1_inner","color_temp") | int(367) }}
            {% else %}
              {{ ( states("sensor.global_dummy_light_color_temperature") | int(367) ) }}
            {% endif %}
          color_temp_max: >-
            {{ state_attr("binary_sensor.mf1_bathroom1_autocolor", "color_temp") | int(367) + 15 }}
          color_temp_min: >-
            {{ state_attr("binary_sensor.mf1_bathroom1_autocolor", "color_temp") | int(367) - 15 }}

      - unique_id: "ed020974-7eb9-433f-8d5d-920307415ed5"
        name: "MF1: Bathroom1 (Inner) - Color Mode"
        state: "{{ state_attr('light.mf1_bathroom1_inner','color_mode') == 'xy' }}"

      - unique_id: "404eb573-2329-4841-9228-eba522a0da56"
        name: "[Light] MF1: Bathroom1 (Inner) - Scene Bright"
        state: >-
          {% if is_state_attr("light.mf1_bathroom1_inner", "brightness", "255") and
                is_state_attr("light.mf1_bathroom_1_inner", "color_temp", "367") %}
                on
          {% else %}
                off
          {% endif %}

      - unique_id: "cadd88e5-e312-46f3-9a60-19c225c8a0d9"
        name: "[Light] MF1: Bathroom1 (Outer) - Autobrightness"
        state: >-
          {{ (
               states("sensor.global_dummy_light_brightness") | int(100) ) <
               ( state_attr("binary_sensor.mf1_bathroom1_outer_autobrightness", "brightness_max")
               | int(104) )
             and ( states("sensor.global_dummy_light_brightness") | int(100) ) >
             ( state_attr("binary_sensor.mf1_bathroom1_outer_autobrightness", "brightness_min") | int(100)
             ) }}
        attributes:
          brightness: >-
            {% if state_attr("light.mf1_bathroom1_outer", "brightness") == None or
               is_state_attr("light.mf1_bathroom1_outer", "brightness", "unknown") or
               is_state("light.mf1_bathroom1_outer", "off") %}
              {{ ( states("sensor.global_dummy_light_brightness") | int(100) ) }}
            {% else %}
              {{ ( state_attr("light.bf1_den_cf2","brightness") / 254 * 100 ) | int(100) }}
            {% endif %}
          brightness_max: >-
            {{ state_attr("binary_sensor.mf1_bathroom1_outer_autobrightness", "brightness") | int(100) + 4 }}
          brightness_min: >-
            {{ state_attr("binary_sensor.mf1_bathroom1_outer_autobrightness", "brightness") | int(100) - 4 }}

      - unique_id: "c0a83d91-4ac2-45f8-8e75-b70de54cb6fe"
        name: "MF1: Bathroom1 (Outer) - Autocolor"
        state: >-
          {{ ( states("sensor.global_dummy_light_color_temperature") | int(367) ) <
               ( state_attr("binary_sensor.mf1_bathroom1_outer_autocolor", "color_temp_max")
               | int(382) )
             and ( states("sensor.global_dummy_light_color_temperature") | int(367) ) >
               ( state_attr("binary_sensor.mf1_bathroom1_outer_autocolor", "color_temp_min")
               | int(352))
             }}
        attributes:
          color_temp: >-
            {% if state_attr("light.mf1_bathroom1_outer", "color_temp") is number %}
              {{ state_attr("light.mf1_bathroom1_outer","color_temp") | int(367) }}
            {% else %}
              {{ ( states("sensor.global_dummy_light_color_temperature") | int(367) ) }}
            {% endif %}
          color_temp_max: >-
            {{ state_attr("binary_sensor.mf1_bathroom1_autocolor", "color_temp") | int(367) + 15 }}
          color_temp_min: >-
            {{ state_attr("binary_sensor.mf1_bathroom1_autocolor", "color_temp") | int(367) - 15 }}

  - sensor:
      - unique_id: "db0e13cd-2f9a-46ea-af70-37c39bbd6fde"
        name: "MF1: Bathroom1 (Inner) Color"
        state: "{{ state_attr('light.mf1_bathroom1_inner', 'xy_color') }}"

      - unique_id: "730965f2-8388-4545-8a9e-d587c732345a"
        name: "MF1: Bathroom1 (Outer) Color"
        state: "{{ state_attr('light.mf1_bathroom1_outer', 'xy_color') }}"
