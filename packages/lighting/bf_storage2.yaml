---
# ==================================================================================================
#
# Storage area 2
#
# ==================================================================================================
adaptive_lighting:
  - name: "BF1: Storage2"
    lights:
      - light.bf1_storage2
    #prefer_rgb_color: false
    initial_transition: 1
    #sleep_transition: 1
    #transition: 45
    #interval: 90
    #min_brightness: 1
    #max_brightness: 100
    min_color_temp: 2200
    max_color_temp: 6500
    #sleep_brightness: 1
    #sleep_rgb_or_color_temp: "color_temp"
    #sleep_rgb_color:
    #  - 255
    #  - 56
    #  - 0
    #sleep_color_temp: 1000
    #sunrise_time: None
    #max_sunrise_time: None
    #sunrise_offset: 0
    #sunset_time: None
    #min_sunset_time: None
    #sunset_offset: 0
    #only_once: False
    #take_over_control: True
    #detect_non_ha_changes: False
    adapt_delay: 10

# ==================================================================================================
#
# Automations
#
# ==================================================================================================
automation:
  - id: "c8534c5e-94e1-4e97-a2e3-d1f585ba0043"
    alias: "BF1: Storage2 - Adaptive Lighting (Toggle Brightness Adjustment)"
    trigger:
      - platform: state
        entity_id: input_select.light_mode
        to: "Circadian"
      - platform: state
        entity_id: binary_sensor.light_bf1_storage2_autobrightness
        not_from:
          - "unknown"
          - "unavailable"
        not_to:
          - "unknown"
          - "unavailable"
    variables:
      brightness_mode: "{{ states('binary_sensor.light_bf1_storage2_autobrightness') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ brightness_mode }}"
        data:
          entity_id:
            - switch.bf1_storage2_adaptive_lighting_brightness
    mode: single

  - id: "89633b72-f251-4d8c-81f9-8eecdf71d72d"
    alias: "BF1: Storage2 - Adaptive Lighting (Turn Off Brightness Adjustment)"
    description: ""
    trigger:
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 3
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 2
    condition: []
    action:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
            - switch.bf1_storage2_adaptive_lighting_brightness
    mode: single

  - id: "a8bf6fba-c27a-491f-baaf-58c9a08b5177"
    alias: "BF1: Storage2 - Adaptive Lighting (Toggle Color Adjustment)"
    trigger:
      - platform: state
        entity_id: input_select.light_mode
        to: "Circadian"
      - platform: state
        entity_id: binary_sensor.bf1_storage2_autocolor
        not_from:
          - "unknown"
          - "unavailable"
        not_to:
          - "unknown"
          - "unavailable"
    variables:
      brightness_mode: "{{ states('binary_sensor.bf1_storage2_autocolor') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ brightness_mode }}"
        data: {}
        target:
          entity_id:
            - switch.bf1_storage2_adaptive_lighting_color
    mode: single

  - id: "a09c9538-91f6-47f1-83fc-f4a823ca8dbc"
    alias: "BF1: Storage2 - Adaptive Lighting (Turn Off Color Adjustment)"
    description: ""
    trigger:
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 4
            type: "long_release"
    condition: []
    action:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
            - switch.bf1_storage2_adaptive_lighting_color
    mode: single

  - id: "92243e2d-3188-48f7-a269-9b98b090a41b"
    alias: "BF1: Storage2 - Green Has Been On"
    description: ""
    trigger:
      - platform: state
        entity_id: light.bf1_storage2
        attribute: xy_color
        to: (0.23, 0.698)
    condition: []
    action:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.bf1_storage2_green_event
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.special_migraine_mode
    mode: single

  - id: "46d6fe4b-6b26-43d2-a924-3a0865ae0dab"
    alias: "BF1: Storage2 - Turn off Green tracker"
    description: ""
    trigger:
      - at: "04:00"
        platform: time
    condition: []
    action:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.bf1_storage2_green_event
    mode: single

# ==================================================================================================
#
# Input Boolean
#
# ==================================================================================================
input_boolean:
  bf1_storage2_green_event:
    name: "BF1: Storage2 - Green Event"

# ==================================================================================================
#
# Input Text
#
# ==================================================================================================
input_text:
  bf1_storage2_lamp1_bulb1:
    name: "BF1: Storage2 Lamp1 Bulb1"
    min: 36
    max: 36
  bf1_storage2_lamp2_bulb1:
    name: "BF1: Storage2 Lamp2 Bulb1"
    min: 36
    max: 36
  bf1_storage2_lamp3_bulb1:
    name: "BF1: Storage2 Lamp3 Bulb1"
    min: 36
    max: 36
  bf1_storage2_lamp4_bulb1:
    name: "BF1: Storage2 Lamp4 Bulb1"
    min: 36
    max: 36

  bf1_storage2_scene_homeassistant:
    name: "BF1: Storage2 Scene HomeAssistant"
    min: 36
    max: 36

# ==================================================================================================
#
# Scenes
#
# ==================================================================================================
#scene:

# ==================================================================================================
#
# Templates
#
# Need to eventually convert these into the new 'template:' style.  This currently doesn't seem
# to work inside packages.
#
# https://www.home-assistant.io/integrations/template/
#
# ==================================================================================================
template:
  - binary_sensor:
      - unique_id: "a96450bb-3f44-483c-a521-c3896561c168"
        name: "BF1: Storage2 - Autobrightness"
        state: >-
          {{ (
               states("sensor.global_dummy_light_brightness") | int(100) ) <
               ( state_attr("binary_sensor.light_bf1_storage2_autobrightness", "brightness_max")
               | int(104) )
             and ( states("sensor.global_dummy_light_brightness") | int(100) ) >
             ( state_attr("binary_sensor.light_bf1_storage2_autobrightness", "brightness_min") | int(100)
             ) }}
        attributes:
          brightness: >-
            {% if state_attr("light.bf1_storage2", "brightness") == None or
               is_state_attr("light.bf1_storage2", "brightness", "unknown") or
               is_state("light.bf1_storage2", "off") %}
              {{ ( states("sensor.global_dummy_light_brightness") | int(100) ) }}
            {% else %}
              {{ ( state_attr("light.bf1_storage2","brightness") / 254 * 100 ) | int(100) }}
            {% endif %}
          brightness_max: >-
            {{ state_attr("binary_sensor.light_bf1_storage2_autobrightness", "brightness") | int(100) + 4 }}
          brightness_min: >-
            {{ state_attr("binary_sensor.light_bf1_storage2_autobrightness", "brightness") | int(100) - 4 }}

      - unique_id: "0883217d-2483-4724-a484-828fb9978fea"
        name: "BF1: Storage2 - Autocolor"
        state: >-
          {{ ( states("sensor.global_dummy_light_color_temperature") | int(367) ) <
               ( state_attr("binary_sensor.bf1_storage2_autocolor", "color_temp_max")
               | int(382) )
             and ( states("sensor.global_dummy_light_color_temperature") | int(367) ) >
               ( state_attr("binary_sensor.bf1_storage2_autocolor", "color_temp_min")
               | int(352))
             }}
        attributes:
          color_temp: >-
            {% if state_attr("light.bf1_storage2", "color_temp") is number %}
              {{ state_attr("light.bf1_storage2","color_temp") | int(367) }}
            {% else %}
              {{ ( states("sensor.global_dummy_light_color_temperature") | int(367) ) }}
            {% endif %}
          color_temp_max: >-
            {{ state_attr("binary_sensor.bf1_storage2_autocolor", "color_temp") | int(367) + 15 }}
          color_temp_min: >-
            {{ state_attr("binary_sensor.bf1_storage2_autocolor", "color_temp") | int(367) - 15 }}

      - unique_id: "5e28eb79-8288-48b1-a2f7-ab0b860ac0ce"
        name: "BF1: Storage2 Color Mode"
        state: "{{ state_attr('light.bf1_storage2','color_mode') == 'xy' }}"

  - sensor:
      - unique_id: "c5ec7dfa-9099-4488-871d-ef3535c78cf1"
        name: "BF1: Storage2 Color"
        state: "{{ state_attr('light.bf1_storage2', 'xy_color') }}"

...
