---
# ==================================================================================================
#
# BF: Den
#
# ==================================================================================================
adaptive_lighting:
  - name: "BF1: Den CF1"
    lights:
      - light.bf1_den_cf1
    initial_transition: 1
    min_color_temp: 2000
    max_color_temp: 6500

  - name: "BF1: Den CF2"
    lights:
      - light.bf1_den_cf2
    initial_transition: 1
    min_color_temp: 2000
    max_color_temp: 6500

  - name: "BF1: Den Lamp1"
    lights:
      - light.bf1_den_lamp1
    initial_transition: 1
    min_color_temp: 2000
    max_color_temp: 6500

  - name: "BF1: Den Lamp2"
    lights:
      - light.bf1_den_lamp2
    initial_transition: 1
    min_color_temp: 2000
    max_color_temp: 6500

  - name: "BF1: Den Lamp3"
    lights:
      - light.bf1_den_lamp3
    initial_transition: 1
    min_color_temp: 2000
    max_color_temp: 6500

# ==================================================================================================
#
# Automations
#
# ==================================================================================================
automation:
  # ================================================================================================
  #
  # Whole Room
  #
  # ================================================================================================
  - id: "4c6e9101-a48b-480f-bd66-ad4b5fe13ac2"
    alias: "BF1: Den - Adaptive Lighting (Toggle)"
    trigger:
      - platform: state
        entity_id: binary_sensor.bf1_den_color_mode
    variables:
      adaptive_mode: "{{ iif(is_state('binary_sensor.bf1_den_color_mode','on'), 'off','on') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ adaptive_mode }}"
        data:
          entity_id:
            - switch.bf1_den_cf1_adaptive_lighting
            - switch.bf1_den_cf2_adaptive_lighting
            - switch.bf1_den_lamp1_adaptive_lighting
            - switch.bf1_den_lamp2_adaptive_lighting
            - switch.bf1_den_lamp3_adaptive_lighting
    mode: single

  - id: "a068ce76-cc17-4d03-a706-5e72bdd7f542"
    alias: "BF1: Den - Update Selected Scene"
    trigger:
      - platform: state
        entity_id: input_select.bf1_den_scene
    condition:
      - condition: template
        value_template: "{{ trigger.to_state != trigger.from_state }}"
    action:
      service: scene.turn_on
      data_template:
        entity_id: >
          {{ states('input_select.bf1_den_scene') }}
    mode: single

  - id: "55cd64c4-64f3-45e0-9e49-44c666ee5df1"
    alias: "BF1: Den - Auto populate Hue dynamic scene input select"
    trigger:
      - platform: event
        event_type: delayed_homeassistant_start
    action:
      service: input_select.set_options
      target:
        entity_id: input_select.bf1_den_dynamic_scenes
      data:
        options: >
          {{ states.scene
            | selectattr('attributes.group_name','eq','BF1: Den')
            | selectattr('attributes.is_dynamic','eq',true)
            | map(attribute='name')
            | list }}
    mode: restart

  # ================================================================================================
  #
  # BF1: Den CF1
  #
  # ================================================================================================
  - id: "a295f04d-9e1e-4b57-80ae-b4dea525742d"
    alias: "BF1: Den CF1 - Adaptive Lighting (Toggle Brightness Adjustment)"
    trigger:
      - platform: state
        entity_id: input_select.light_mode
        to: "Circadian"
      - platform: state
        entity_id: binary_sensor.bf1_den_cf1_autobrightness
        not_from:
          - "unknown"
          - "unavailable"
        not_to:
          - "unknown"
          - "unavailable"
    variables:
      brightness_mode: "{{ states('binary_sensor.bf1_den_cf1_autobrightness') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ brightness_mode }}"
        data:
          entity_id:
            - switch.bf1_den_cf1_adaptive_lighting_brightness
    mode: single

  - id: "5767f02e-cf98-4a58-935d-23008b0c4b29"
    alias: "BF1: Den CF1 - Adaptive Lighting (Turn Off Brightness Adjustment)"
    description: ""
    trigger:
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 3
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 2
    condition: []
    action:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
            - switch.bf1_den_cf1_adaptive_lighting_brightness
    mode: single

  - id: "4227c801-66c4-439f-ba9d-8a478d67a497"
    alias: "BF1: Den CF1 - Adaptive Lighting (Toggle Color Adjustment)"
    trigger:
      - platform: state
        entity_id: input_select.light_mode
        to: "Circadian"
      - platform: state
        entity_id: binary_sensor.bf1_den_cf1_autocolor
        not_from:
          - "unknown"
          - "unavailable"
        not_to:
          - "unknown"
          - "unavailable"
    variables:
      brightness_mode: "{{ states('binary_sensor.bf1_den_cf1_autocolor') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ brightness_mode }}"
        data:
          entity_id:
            - switch.bf1_den_cf1_adaptive_lighting_color
    mode: single

  - id: "7df3d18c-0692-4307-bd22-9d21f6fafc8f"
    alias: "BF1: Den CF1 - Adaptive Lighting (Turn Off Color Adjustment)"
    description: ""
    trigger:
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 4
            type: "long_release"
    condition: []
    action:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
            - switch.bf1_den_cf1_adaptive_lighting_color
    mode: single

  - id: "d82d5d46-b56b-4587-8978-1fa151d2b666"
    alias: "BF1: Den CF1 - Green Has Been On"
    description: ""
    trigger:
      - platform: state
        entity_id: light.bf1_den_cf1
        attribute: xy_color
        to: (0.23, 0.698)
    condition: []
    action:
      - entity_id: input_boolean.bf1_den_cf1_green_event
        service: input_boolean.turn_on
      - entity_id: input_boolean.special_migraine_mode
        service: input_boolean.turn_on
    mode: single

  - id: "1638cbed-885f-435e-b200-324d14755a9c"
    alias: "BF1: Den CF1 - Turn off Green tracker"
    description: ""
    trigger:
      - at: "04:00"
        platform: time
    condition: []
    action:
      - entity_id: input_boolean.bf1_den_cf1_green_event
        service: input_boolean.turn_off
    mode: single

  # ================================================================================================
  #
  # BF1: Den CF2
  #
  # ================================================================================================
  - id: "2bb7e80d-9401-4294-97fa-ed54926aaeae"
    alias: "BF1: Den CF2 - Adaptive Lighting (Toggle Brightness Adjustment)"
    trigger:
      - platform: state
        entity_id: input_select.light_mode
        to: "Circadian"
      - platform: state
        entity_id: binary_sensor.bf1_den_cf2_autobrightness
        not_from:
          - "unknown"
          - "unavailable"
        not_to:
          - "unknown"
          - "unavailable"
    variables:
      brightness_mode: "{{ states('binary_sensor.bf1_den_cf2_autobrightness') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ brightness_mode }}"
        data:
          entity_id:
            - switch.bf1_den_cf2_adaptive_lighting_brightness
    mode: single

  - id: "28bb11af-1d93-4271-bd3b-a64d72e5e861"
    alias: "BF1: Den CF2 - Adaptive Lighting (Turn Off Brightness Adjustment)"
    description: ""
    trigger:
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 3
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 2
    condition: []
    action:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
            - switch.bf1_den_cf2_adaptive_lighting_brightness
    mode: single

  - id: "86758f5f-44f8-4034-831b-773f08a58c50"
    alias: "BF1: Den CF2 - Adaptive Lighting (Toggle Color Adjustment)"
    trigger:
      - platform: state
        entity_id: input_select.light_mode
        to: "Circadian"
      - platform: state
        entity_id: binary_sensor.bf1_den_cf2_autocolor
        not_from:
          - "unknown"
          - "unavailable"
        not_to:
          - "unknown"
          - "unavailable"
    variables:
      brightness_mode: "{{ states('binary_sensor.bf1_den_cf2_autocolor') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ brightness_mode }}"
        data:
          entity_id:
            - switch.bf1_den_cf2_adaptive_lighting_color
    mode: single

  - id: "4c92a44f-7822-49ef-ac1c-6527d95b18bf"
    alias: "BF1: Den CF2 - Adaptive Lighting (Turn Off Color Adjustment)"
    description: ""
    trigger:
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 4
            type: "long_release"
    condition: []
    action:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
            - switch.bf1_den_cf2_adaptive_lighting_color
    mode: single

  - id: "3f0566d8-ecfc-4913-be01-d80656aacdaa"
    alias: "BF1: Den CF2 - Green Has Been On"
    description: ""
    trigger:
      - platform: state
        entity_id: light.bf1_den_cf2
        attribute: xy_color
        to: (0.23, 0.698)
    condition: []
    action:
      - entity_id: input_boolean.bf1_den_cf2_green_event
        service: input_boolean.turn_on
      - entity_id: input_boolean.special_migraine_mode
        service: input_boolean.turn_on
    mode: single

  - id: "acc9c6fa-f6de-4d65-9bc9-0855d92851c4"
    alias: "BF1: Den CF2 - Turn off Green tracker"
    description: ""
    trigger:
      - at: "04:00"
        platform: time
    condition: []
    action:
      - entity_id: input_boolean.bf1_den_cf2_green_event
        service: input_boolean.turn_off
    mode: single


  # ================================================================================================
  #
  # BF1: Den Lamp1
  #
  # ================================================================================================
  - id: "856093cd-615e-481c-a8cb-c8625aa70f43"
    alias: "BF1: Den Lamp1 - Adaptive Lighting (Toggle Brightness Adjustment)"
    trigger:
      - platform: state
        entity_id: input_select.light_mode
        to: "Circadian"
      - platform: state
        entity_id: binary_sensor.bf1_den_lamp1_autobrightness
        not_from:
          - "unknown"
          - "unavailable"
        not_to:
          - "unknown"
          - "unavailable"
    variables:
      brightness_mode: "{{ states('binary_sensor.bf1_den_lamp1_autobrightness') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ brightness_mode }}"
        data:
          entity_id:
            - switch.bf1_den_lamp1_adaptive_lighting_brightness
    mode: single

  - id: "85f03946-6f35-480b-81a7-6dde04d6b583"
    alias: "BF1: Den Lamp1 - Adaptive Lighting (Turn Off Brightness Adjustment)"
    description: ""
    trigger:
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 3
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 2
    condition: []
    action:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
            - switch.bf1_den_lamp1_adaptive_lighting_brightness
    mode: single

  - id: "c9074727-9e7b-4b41-b92f-ba5209140e63"
    alias: "BF1: Den Lamp1 - Adaptive Lighting (Toggle Color Adjustment)"
    trigger:
      - platform: state
        entity_id: input_select.light_mode
        to: "Circadian"
      - platform: state
        entity_id: binary_sensor.bf1_den_lamp1_autocolor
        not_from:
          - "unknown"
          - "unavailable"
        not_to:
          - "unknown"
          - "unavailable"
    variables:
      brightness_mode: "{{ states('binary_sensor.bf1_den_lamp1_autocolor') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ brightness_mode }}"
        data:
          entity_id:
            - switch.bf1_den_lamp1_adaptive_lighting_color
    mode: single

  - id: "1ac2ce08-5d71-4920-99dc-5d4ab55665e2"
    alias: "BF1: Den Lamp1 - Adaptive Lighting (Turn Off Color Adjustment)"
    description: ""
    trigger:
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 4
            type: "long_release"
    condition: []
    action:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
            - switch.bf1_den_lamp1_adaptive_lighting_color
    mode: single

  - id: "a4f4a67e-a44f-4a5c-9871-5f52a6ad2ec1"
    alias: "BF1: Den Lamp1 - Green Has Been On"
    description: ""
    trigger:
      - platform: state
        entity_id: light.bf1_den_lamp1
        attribute: xy_color
        to: (0.23, 0.698)
    condition: []
    action:
      - entity_id: input_boolean.bf1_den_lamp1_green_event
        service: input_boolean.turn_on
      - entity_id: input_boolean.special_migraine_mode
        service: input_boolean.turn_on
    mode: single

  - id: "60a4bb9e-fae1-4d2f-97bb-5b3962927168"
    alias: "BF1: Den Lamp1 - Turn off Green tracker"
    description: ""
    trigger:
      - at: "04:00"
        platform: time
    condition: []
    action:
      - entity_id: input_boolean.bf1_den_lamp1_green_event
        service: input_boolean.turn_off
    mode: single

  # ================================================================================================
  #
  # BF1: Den Lamp2
  #
  # ================================================================================================
  - id: "c1598496-1a45-4199-bc5b-64d11ba6b393"
    alias: "BF1: Den Lamp2 - Adaptive Lighting (Toggle Brightness Adjustment)"
    trigger:
      - platform: state
        entity_id: input_select.light_mode
        to: "Circadian"
      - platform: state
        entity_id: binary_sensor.bf1_den_lamp2_autobrightness
        not_from:
          - "unknown"
          - "unavailable"
        not_to:
          - "unknown"
          - "unavailable"
    variables:
      brightness_mode: "{{ states('binary_sensor.bf1_den_lamp2_autobrightness') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ brightness_mode }}"
        data:
          entity_id:
            - switch.bf1_den_lamp2_adaptive_lighting_brightness
    mode: single

  - id: "8a16a438-7064-46e3-83f4-3c9c30286613"
    alias: "BF1: Den Lamp2 - Adaptive Lighting (Turn Off Brightness Adjustment)"
    description: ""
    trigger:
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 3
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 2
    condition: []
    action:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
            - switch.bf1_den_lamp2_adaptive_lighting_brightness
    mode: single

  - id: "26890e24-029c-42e6-a3db-5d64b978f989"
    alias: "BF1: Den Lamp2 - Adaptive Lighting (Toggle Color Adjustment)"
    trigger:
      - platform: state
        entity_id: input_select.light_mode
        to: "Circadian"
      - platform: state
        entity_id: binary_sensor.bf1_den_lamp2_autocolor
        not_from:
          - "unknown"
          - "unavailable"
        not_to:
          - "unknown"
          - "unavailable"
    variables:
      brightness_mode: "{{ states('binary_sensor.bf1_den_lamp2_autocolor') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ brightness_mode }}"
        data:
          entity_id:
            - switch.bf1_den_lamp2_adaptive_lighting_color
    mode: single

  - id: "f71b2aa4-c4a7-49a4-a7a9-05535a5e16c8"
    alias: "BF1: Den Lamp2 - Adaptive Lighting (Turn Off Color Adjustment)"
    description: ""
    trigger:
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 4
            type: "long_release"
    condition: []
    action:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
            - switch.bf1_den_lamp2_adaptive_lighting_color
    mode: single

  - id: "052c6a95-68a1-4c92-b2e4-0ee9d61d9841"
    alias: "BF1: Den Lamp2 - Green Tracker (Turn On)"
    description: ""
    trigger:
      - entity_id: sensor.bf1_den_lamp2_color
        platform: state
        to: (0.23, 0.698)
    condition: []
    action:
      - entity_id: input_boolean.bf1_den_lamp2_green_event
        service: input_boolean.turn_on

  - id: "cb8b4633-4a47-477e-9391-240ba6c7d71c"
    alias: "BF1: Den Lamp2 - Green Tracker (Turn Off)"
    description: ""
    trigger:
      - at: "04:00"
        platform: time
    condition: []
    action:
      - entity_id: input_boolean.bf1_den_lamp2_green_event
        service: input_boolean.turn_off
    mode: single

  # ================================================================================================
  #
  # BF1: Den Lamp3
  #
  # ================================================================================================
  - id: "37ba0e30-fec3-42ad-ae96-ad6378ebf63a"
    alias: "BF1: Den Lamp3 - Adaptive Lighting (Toggle Brightness Adjustment)"
    trigger:
      - platform: state
        entity_id: input_select.light_mode
        to: "Circadian"
      - platform: state
        entity_id: binary_sensor.bf1_den_lamp3_autobrightness
        not_from:
          - "unknown"
          - "unavailable"
        not_to:
          - "unknown"
          - "unavailable"
    variables:
      brightness_mode: "{{ states('binary_sensor.bf1_den_lamp3_autobrightness') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ brightness_mode }}"
        data:
          entity_id:
            - switch.bf1_den_lamp3_adaptive_lighting_brightness
    mode: single

  - id: "1a482491-906a-4d50-ac19-3e0a1585ab5a"
    alias: "BF1: Den Lamp3 - Adaptive Lighting (Turn Off Brightness Adjustment)"
    description: ""
    trigger:
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 3
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 2
    condition: []
    action:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
            - switch.bf1_den_lamp3_adaptive_lighting_brightness
    mode: single

  - id: "6e947fe3-794d-47e8-a1ac-dac059eeacde"
    alias: "BF1: Den Lamp3 - Adaptive Lighting (Toggle Color Adjustment)"
    trigger:
      - platform: state
        entity_id: input_select.light_mode
        to: "Circadian"
      - platform: state
        entity_id: binary_sensor.bf1_den_lamp3_autocolor
        not_from:
          - "unknown"
          - "unavailable"
        not_to:
          - "unknown"
          - "unavailable"
    variables:
      brightness_mode: "{{ states('binary_sensor.bf1_den_lamp3_autocolor') }}"
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ is_state('input_select.light_mode', 'Circadian') }}"
    action:
      - service: "switch.turn_{{ brightness_mode }}"
        data:
          entity_id:
            - switch.bf1_den_lamp3_adaptive_lighting_color
    mode: single

  - id: "fafeb5e8-68c4-4e88-9580-a62dc887f052"
    alias: "BF1: Den Lamp3 - Adaptive Lighting (Turn Off Color Adjustment)"
    description: ""
    trigger:
        - platform: event
          event_type: hue_event
          event_data:
            id: bf1_great_room_switch_button
            subtype: 4
            type: "long_release"
    condition: []
    action:
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
            - switch.bf1_den_lamp3_adaptive_lighting_color
    mode: single

  - id: "dd5aa96f-4be1-40d0-98ca-3ff6c4096d4a"
    alias: "BF1: Den Lamp3 - Green Tracker (Turn On)"
    description: ""
    trigger:
      - entity_id: sensor.bf1_den_lamp3_color
        platform: state
        to: (0.23, 0.698)
    condition: []
    action:
      - entity_id: input_boolean.bf1_den_lamp3_green_event
        service: input_boolean.turn_on

  - id: "d8a8ba7e-afcc-4e1d-9eb8-73b80d171473"
    alias: "BF1: Den Lamp3 - Green Tracker (Turn Off)"
    description: ""
    trigger:
      - at: "04:00"
        platform: time
    condition: []
    action:
      - entity_id: input_boolean.bf1_den_lamp3_green_event
        service: input_boolean.turn_off
    mode: single

# ==================================================================================================
#
# Input Boolean
#
# ==================================================================================================
input_boolean:


  # ================================================================================================
  #
  # The next five input_boolean entities are used to track if the light has been turned green today
  #
  # ================================================================================================
  bf1_den_cf1_green_event:
    name: "BF1: Den CF1 - Green Event"

  bf1_den_cf2_green_event:
    name: "BF1: Den CF2 - Green Event"

  bf1_den_lamp1_green_event:
    name: "BF1: Den Lamp1 - Green Event"

  bf1_den_lamp2_green_event:
    name: "BF1: Den Lamp2 - Green Event"

  bf1_den_lamp3_green_event:
    name: "BF1: Den Lamp3 - Green Event"

# ==================================================================================================
#
# Input Number
#
# ==================================================================================================
input_number:
  bf1_den_dynamic_scene_speed:
    name: "BF1: Den - Dynamic Scene Speed"
    min: 0
    max: 100
    step: 10

  bf1_den_dynamic_scene_brightness:
    name: "BF1: Den - Dynamic Scene Brightness"
    min: 0
    max: 255
    step: 10

# ==================================================================================================
#
# Input Select
#
# ==================================================================================================
input_select:
  bf1_den_scene:
    name: "BF1: Den - Scene"
    options:
      - scene.bf1_den_bright
      - scene.bf1_den_candle
      - scene.bf1_den_concentrate
      - scene.bf1_den_darken
      - scene.bf1_den_dimmed
      - scene.bf1_den_energize
      - scene.bf1_den_fireplace
      - scene.bf1_den_homeassistant
      - scene.bf1_den_migraine
      - scene.bf1_den_nightlight
      - scene.bf1_den_read
      - scene.bf1_den_relax
      - scene.bf1_den_dynamic

  bf1_den_cf1_scene:
    name: "BF1: Den CF1 - Scene"
    options:
      - scene.bf1_den_cf1_bright
      - scene.bf1_den_cf1_concentrate
      - scene.bf1_den_cf1_darken
      - scene.bf1_den_cf1_dimmed
      - scene.bf1_den_cf1_energize
      - scene.bf1_den_cf1_homeassistant
      - scene.bf1_den_cf1_migraine
      - scene.bf1_den_cf1_nightlight
      - scene.bf1_den_cf1_read
      - scene.bf1_den_cf1_relax

  bf1_den_cf2_scene:
    name: "BF1: Den CF2 - Scene"
    options:
      - scene.bf1_den_cf2_bright
      - scene.bf1_den_cf2_concentrate
      - scene.bf1_den_cf2_dimmed
      - scene.bf1_den_cf2_energize
      - scene.bf1_den_cf2_homeassistant
      - scene.bf1_den_cf2_nightlight
      - scene.bf1_den_cf2_read
      - scene.bf1_den_cf2_relax

  bf1_den_lamp1_scene:
    name: "BF1: Den Lamp1 - Scene"
    options:
      - scene.bf1_den_lamp1_bright
      - scene.bf1_den_lamp1_concentrate
      - scene.bf1_den_lamp1_dimmed
      - scene.bf1_den_lamp1_energize
      - scene.bf1_den_lamp1_homeassistant
      - scene.bf1_den_lamp1_nightlight
      - scene.bf1_den_lamp1_read
      - scene.bf1_den_lamp1_relax

  bf1_den_lamp2_scene:
    name: "BF1: Den Lamp2 - Scene"
    options:
      - scene.bf1_den_lamp2_bright
      - scene.bf1_den_lamp2_candle
      - scene.bf1_den_lamp2_concentrate
      - scene.bf1_den_lamp2_darken
      - scene.bf1_den_lamp2_dimmed
      - scene.bf1_den_lamp2_energize
      - scene.bf1_den_lamp2_fireplace
      - scene.bf1_den_lamp2_homeassistant
      - scene.bf1_den_lamp2_migraine
      - scene.bf1_den_lamp2_nightlight
      - scene.bf1_den_lamp2_read
      - scene.bf1_den_lamp2_relax

  bf1_den_lamp3_scene:
    name: "BF1: Den Lamp3 - Scene"
    options:
      - scene.bf1_den_lamp3_bright
      - scene.bf1_den_lamp3_concentrate
      - scene.bf1_den_lamp3_dimmed
      - scene.bf1_den_lamp3_energize
      - scene.bf1_den_lamp3_homeassistant
      - scene.bf1_den_lamp3_nightlight
      - scene.bf1_den_lamp3_read
      - scene.bf1_den_lamp3_relax

# ==================================================================================================
#
# Template Lights
#
# ==================================================================================================
light:
  - platform: template
    lights:
      bf1_den_alt:
        friendly_name: "BF1: Den (Alt)"
        unique_id: "80cb201a-52a0-48c3-992e-4bf8c4e51a1f"
        value_template: "{{ is_state('light.bf1_den', 'on') }}"
        level_template: "{{ state_attr('light.bf1_den','brightness') | int(255) }}"
        temperature_template: "{{ state_attr('light.bf1_den','color_temp') | int(367) }}"
        color_template: "{{ state_attr('light.bf1_den','hs_color') }}"
        min_mireds_template: "{{ state_attr('light.bf1_den','min_mireds') | int(100) }}"
        max_mireds_template: "{{ state_attr('light.bf1_den','max_mireds') | int(500) }}"
        effect_list_template: "{{ state_attr('light.bf1_den_lamp2_bulb1', 'effect_list') }}"
        turn_on:
          service: scene.turn_on
          data_template:
            entity_id: >
              {{ states('input_select.bf1_den_scene') }}
        turn_off:
          service: light.turn_off
          target:
            entity_id: light.bf1_den
        set_level:
          service: light.turn_on
          target:
            entity_id: light.bf1_den
          data:
            brightness: "{{ brightness }}"
        set_temperature:
          service: light.turn_on
          target:
            entity_id: light.bf1_den
          data:
            color_temp: "{{ color_temp }}"
        set_color:
          service: light.turn_on
          target:
            entity_id: light.bf1_den
          data:
            hs_color:
              - "{{ hs[0] }}"
              - "{{ hs[1] }}"
        # set_effect:
        #   - service: light.turn_on
        #     data_template:
        #       - light.bf1_den
        #     effect: "{{ effect }}"
        supports_transition_template: "{{ true }}"

# ==================================================================================================
#
# Rest Commands
#
# ==================================================================================================
rest_command:
  light_update_bf1_den_scene:
    url: "https://hue2.iot.home/clip/v2/resource/scene/{{ scene_id }}"
    method: put
    headers:
      hue-application-key: "{{ username }}"
    payload: '{
          "id":"{{ scene_id }}",
          "actions":[
          {
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid": "2b238059-189a-4f70-b33a-6b6948b70dc7","rtype":"light"}
          },
          {
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid": "b02df779-caaa-446a-8e0e-e73e069f9cbd","rtype":"light"}
          },
          {
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid": "5d9e8921-1307-4181-826e-55c3a05e14ac","rtype":"light"}
          },
          {
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid": "84e56e8b-a96f-4a25-9715-4ecc0921ab8d","rtype":"light"}
          },
          {
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid": "4ccf6d6f-5aa0-4817-b726-a73cf23409bf","rtype":"light"}
          },
          {
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid": "6bdd88fc-67ab-4fe2-baba-10002e77d1d5","rtype":"light"}
          }
          ]
          }'
    verify_ssl: false
    content_type: "application/json"

  light_update_bf1_den_lamp1_scene:
    url: "https://hue2.iot.home/clip/v2/resource/scene/{{ scene_id }}"
    method: put
    headers:
      hue-application-key: "{{ username }}"
    payload: '{
          "id":"{{ scene_id }}",
          "actions":[
          {
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid": "5d9e8921-1307-4181-826e-55c3a05e14ac","rtype":"light"}
          }
          ]
          }'
    verify_ssl: false
    content_type: "application/json"

  light_update_bf1_den_lamp2_scene:
    url: "https://hue2.iot.home/clip/v2/resource/scene/{{ scene_id }}"
    method: put
    headers:
      hue-application-key: "{{ username }}"
    payload: '{
          "id":"{{ scene_id }}",
          "actions":[
          {
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid": "84e56e8b-a96f-4a25-9715-4ecc0921ab8d","rtype":"light"}
          }
          ]
          }'
    verify_ssl: false
    content_type: "application/json"

  light_update_bf1_den_lamp3_scene:
    url: "https://hue2.iot.home/clip/v2/resource/scene/{{ scene_id }}"
    method: put
    headers:
      hue-application-key: "{{ username }}"
    payload: '{
          "id":"{{ scene_id }}",
          "actions":[
          {
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid": "4ccf6d6f-5aa0-4817-b726-a73cf23409bf","rtype":"light"}
          },
          {
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid": "6bdd88fc-67ab-4fe2-baba-10002e77d1d5","rtype":"light"}
          }
          ]
          }'
    verify_ssl: false
    content_type: "application/json"

  light_update_bf1_den_cf1_scene:
    url: "https://hue2.iot.home/clip/v2/resource/scene/{{ scene_id }}"
    method: put
    headers:
      hue-application-key: "{{ username }}"
    payload: '{
          "id":"{{ scene_id }}",
          "actions":[
          {
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid": "2b238059-189a-4f70-b33a-6b6948b70dc7","rtype":"light"}
          }
          ]
          }'
    verify_ssl: false
    content_type: "application/json"

  light_update_bf1_den_cf2_scene:
    url: "https://hue2.iot.home/clip/v2/resource/scene/{{ scene_id }}"
    method: put
    headers:
      hue-application-key: "{{ username }}"
    payload: '{
          "id":"{{ scene_id }}",
          "actions":[
          {
          "action":{ {{ color }},{{ brightness }},{{ on_state }} },
          "target":{"rid": "b02df779-caaa-446a-8e0e-e73e069f9cbd","rtype":"light"}
          }
          ]
          }'
    verify_ssl: false
    content_type: "application/json"

# ==================================================================================================
#
# Scenes
#
# Hue Groups:
#   - den_lamp1: e8c3191a-6cf0-4339-9fd6-a86761162a30
#
#
#
#
#
# ==================================================================================================
#scene:

# ==================================================================================================
#
# Scripts
#
# ==================================================================================================
#script:

# ==================================================================================================
#
# Templates
#
# ==================================================================================================
template:
  - binary_sensor:
      # ============================================================================================
      #
      # Whole Room Binary Sensors
      #
      # ============================================================================================
      - unique_id: "8026215e-768b-48e6-86af-7053c91ac3f6"
        name: "BF1: Den - Color Mode"
        state: "{{ is_state_attr('light.bf1_den','color_mode', 'xy') }}"

      # ============================================================================================
      #
      # BF1: Den CF1 Binary Sensors
      #
      # ============================================================================================
      - unique_id: "4e73e461-0de2-4211-a0a0-daba7d34b223"
        name: "BF1: Den CF1 - Autobrightness"
        state: >-
          {{ (
               states("sensor.global_dummy_light_brightness") | int(100) ) <
               ( state_attr("binary_sensor.bf1_den_cf1_autobrightness", "brightness_max")
               | int(104) )
             and ( states("sensor.global_dummy_light_brightness") | int(100) ) >
             ( state_attr("binary_sensor.bf1_den_cf1_autobrightness", "brightness_min") | int(96)
             ) }}
        attributes:
          brightness: >-
            {% if state_attr("light.bf1_den1_cf1", "brightness") is number %}
              {{ ( state_attr("light.bf1_den_cf1", "brightness") / 254 * 100 ) | int(100) }}
            {% else %}
              {{ ( states("sensor.global_dummy_light_brightness") | int(100) ) }}
            {% endif %}
          brightness_max: >-
            {{ state_attr("binary_sensor.bf1_den_cf1_autobrightness", "brightness") | int(100) + 4 }}
          brightness_min: >-
            {{ state_attr("binary_sensor.bf1_den_cf1_autobrightness", "brightness") | int(100) - 4 }}

      - unique_id: "323a0a4f-8adc-485b-844c-91011ca27147"
        name: "BF1: Den CF1 - Autocolor"
        state: >-
          {{ ( states("sensor.global_dummy_light_color_temperature") | int(367) ) <
               ( state_attr("binary_sensor.bf1_den_cf1_autocolor", "color_temp_max")
               | int(382) )
             and ( states("sensor.global_dummy_light_color_temperature") | int(367) ) >
               ( state_attr("binary_sensor.bf1_den_cf1_autocolor", "color_temp_min")
               | int(352))
             }}
        attributes:
          color_temp: >-
            {% if state_attr("light.bf1_den_cf1", "color_temp") is number %}
              {{ state_attr("light.bf1_den_cf1","color_temp") | int(367) }}
            {% else %}
              {{ ( states("sensor.global_dummy_light_color_temperature") | int(367) ) }}
            {% endif %}
          color_temp_max: >-
            {{ state_attr("binary_sensor.bf1_den_cf1_autocolor", "color_temp") | int(367) + 15 }}
          color_temp_min: >-
            {{ state_attr("binary_sensor.bf1_den_cf1_autocolor", "color_temp") | int(367) - 15 }}

      - unique_id: "62828fad-c7ff-488d-b4e8-8abc61557edb"
        name: "BF1: Den CF1 - Scene Bright"
        state: >-
          {{ is_state_attr("light.bf1_den_cf1", "brightness", "255") and
             is_state_attr("light.bf1_den_cf1", "color_temp", "367") }}

      - unique_id: "6793a217-c757-4da4-877e-518987b2c744"
        name: "BF1: Den CF1 - Scene Concentrate"
        state: >-
          {{ is_state_attr("light.bf1_den_cf1", "brightness", "255") and
             is_state_attr("light.bf1_den_cf1", "color_temp", "230") }}

      # ============================================================================================
      #
      # BF1: Den CF2 Binary Sensors
      #
      # ============================================================================================
      - unique_id: "e7ce778a-148f-455e-8c58-373bc2c07c20"
        name: "BF1: Den CF2 - Autobrightness"
        state: >-
          {{ (
               states("sensor.global_dummy_light_brightness") | int(100) ) <
               ( state_attr("binary_sensor.bf1_den_cf2_autobrightness", "brightness_max")
               | int(104) )
             and ( states("sensor.global_dummy_light_brightness") | int(100) ) >
             ( state_attr("binary_sensor.bf1_den_cf2_autobrightness", "brightness_min") | int(100)
             ) }}
        attributes:
          brightness: >-
            {% if state_attr("light.bf1_den_cf2", "brightness") is number %}
              {{ ( state_attr("light.bf1_den_cf2","brightness") / 254 * 100 ) | int(100) }}
            {% else %}
              {{ ( states("sensor.global_dummy_light_brightness") | int(100) ) }}
            {% endif %}
          brightness_max: >-
            {{ state_attr("binary_sensor.bf1_den_cf2_autobrightness", "brightness") | int(100) + 4 }}
          brightness_min: >-
            {{ state_attr("binary_sensor.bf1_den_cf2_autobrightness", "brightness") | int(100) - 4 }}

      - unique_id: "26f9a3ca-b6aa-43b3-a958-769f03953408"
        name: "BF1: Den CF2 - Autocolor"
        state: >-
          {{ (
               states("sensor.global_dummy_light_color_temperature") | int(367) ) <
               ( state_attr("binary_sensor.bf1_den_cf2_autocolor", "color_temp_max")
               | int(382) )
             and ( states("sensor.global_dummy_light_color_temperature") | int(367) ) >
             ( state_attr("binary_sensor.bf1_den_cf2_autocolor", "color_temp_min")
             | int(352))
             }}
        attributes:
          color_temp: >-
            {% if state_attr("light.bf1_den_cf2", "color_temp") is number %}
              {{ state_attr("light.bf1_den_cf2","color_temp") | int(367) }}
            {% else %}
              {{ ( states("sensor.global_dummy_light_color_temperature") | int(367) ) }}
            {% endif %}
          color_temp_max: >-
            {{ state_attr("binary_sensor.bf1_den_cf2_autocolor", "color_temp") | int(100) + 15 }}
          color_temp_min: >-
            {{ state_attr("binary_sensor.bf1_den_cf2_autocolor", "color_temp") | int(100) - 15 }}


      # ============================================================================================
      #
      # BF1: Den Lamp1 Binary Sensors
      #
      # ============================================================================================
      - unique_id: "40ffe195-8dce-429b-9d93-86ab7b7a0c64"
        name: "BF1: Den Lamp1 - Autobrightness"
        state: >-
          {{ (
               states("sensor.global_dummy_light_brightness") | int(100) ) <
               ( state_attr("binary_sensor.bf1_den_lamp1_autobrightness", "brightness_max")
               | int(104) )
             and ( states("sensor.global_dummy_light_brightness") | int(100) ) >
             ( state_attr("binary_sensor.bf1_den_lamp1_autobrightness", "brightness_min") | int(100)
             ) }}
        attributes:
          brightness: >-
            {% if state_attr("light.bf1_den_lamp1", "brightness") is number %}
              {{ ( state_attr("light.bf1_den_lamp1","brightness") / 254 * 100 ) | int(100) }}
            {% else %}
              {{ ( states("sensor.global_dummy_light_brightness") | int(100) ) }}
            {% endif %}
          brightness_max: >-
            {{ state_attr("binary_sensor.bf1_den_lamp1_autobrightness", "brightness") | int(100) + 4 }}
          brightness_min: >-
            {{ state_attr("binary_sensor.bf1_den_lamp1_autobrightness", "brightness") | int(100) - 4 }}

      - unique_id: "a34519fb-38b3-4771-8609-a3dae4ba21fa"
        name: "BF1: Den Lamp1 - Autocolor"
        state: >-
          {{ (
               states("sensor.global_dummy_light_color_temperature") | int(367) ) <
               ( state_attr("binary_sensor.bf1_den_lamp1_autocolor", "color_temp_max")
               | int(382) )
             and ( states("sensor.global_dummy_light_color_temperature") | int(367) ) >
             ( state_attr("binary_sensor.bf1_den_lamp1_autocolor", "color_temp_min")
             | int(352))
             }}
        attributes:
          color_temp: >-
            {% if state_attr("light.bf1_den_lamp1", "color_temp") is number %}
              {{ state_attr("light.bf1_den_lamp1","color_temp") | int(367) }}
            {% else %}
              {{ ( states("sensor.global_dummy_light_color_temperature") | int(367) ) }}
            {% endif %}
          color_temp_max: >-
            {{ state_attr("binary_sensor.bf1_den_lamp1_autocolor", "color_temp") | int(100) + 15 }}
          color_temp_min: >-
            {{ state_attr("binary_sensor.bf1_den_lamp1_autocolor", "color_temp") | int(100) - 15 }}

      # ============================================================================================
      #
      # BF1: Den Lamp2 Binary Sensors
      #
      # ============================================================================================
      - unique_id: "c941d9d2-85ef-4148-b52a-1020a94c2225"
        name: "BF1: Den Lamp2 - Autobrightness"
        state: >-
          {{ (
               states("sensor.global_dummy_light_brightness") | int(100) ) <
               ( state_attr("binary_sensor.bf1_den_lamp2_autobrightness", "brightness_max")
               | int(104) )
             and ( states("sensor.global_dummy_light_brightness") | int(100) ) >
             ( state_attr("binary_sensor.bf1_den_lamp2_autobrightness", "brightness_min") | int(100)
             ) }}
        attributes:
          brightness: >-
            {% if state_attr("light.bf1_den_lamp2", "brightness") is number %}
              {{ ( state_attr("light.bf1_den_lamp2","brightness") / 254 * 100 ) | int(100) }}
            {% else %}
              {{ ( states("sensor.global_dummy_light_brightness") | int(100) ) }}
            {% endif %}
          brightness_max: >-
            {{ state_attr("binary_sensor.bf1_den_lamp2_autobrightness", "brightness") | int(100) + 4 }}
          brightness_min: >-
            {{ state_attr("binary_sensor.bf1_den_lamp2_autobrightness", "brightness") | int(100) - 4 }}

      - unique_id: "cfec1c05-a688-4f93-8618-427d7eefeac7"
        name: "BF1: Den Lamp2 - Autocolor"
        state: >-
          {{ (
               states("sensor.global_dummy_light_color_temperature") | int(367) ) <
               ( state_attr("binary_sensor.bf1_den_lamp2_autocolor", "color_temp_max")
               | int(382) )
             and ( states("sensor.global_dummy_light_color_temperature") | int(367) ) >
             ( state_attr("binary_sensor.bf1_den_lamp2_autocolor", "color_temp_min")
             | int(352))
             }}
        attributes:
          color_temp: >-
            {% if state_attr("light.bf1_den_lamp2", "color_temp") is number %}
              {{ state_attr("light.bf1_den_lamp2","color_temp") | int(367) }}
            {% else %}
              {{ ( states("sensor.global_dummy_light_color_temperature") | int(367) ) }}
            {% endif %}
          color_temp_max: >-
            {{ state_attr("binary_sensor.bf1_den_lamp2_autocolor", "color_temp") | int(100) + 15 }}
          color_temp_min: >-
            {{ state_attr("binary_sensor.bf1_den_lamp2_autocolor", "color_temp") | int(100) - 15 }}

      # ============================================================================================
      #
      # BF1: Den Lamp3 Binary Sensors
      #
      # ============================================================================================
      - unique_id: "d35877fb-db1e-47e0-bce0-a2517e0e8b92"
        name: "BF1: Den Lamp3 - Autobrightness"
        state: >-
          {{ (
               states("sensor.global_dummy_light_brightness") | int(100) ) <
               ( state_attr("binary_sensor.bf1_den_lamp3_autobrightness", "brightness_max")
               | int(104) )
             and ( states("sensor.global_dummy_light_brightness") | int(100) ) >
             ( state_attr("binary_sensor.bf1_den_lamp3_autobrightness", "brightness_min") | int(100)
             ) }}
        attributes:
          brightness: >-
            {% if state_attr("light.bf1_den_lamp3", "brightness") is number %}
              {{ ( state_attr("light.bf1_den_lamp3","brightness") / 254 * 100 ) | int(100) }}
            {% else %}
              {{ ( states("sensor.global_dummy_light_brightness") | int(100) ) }}
            {% endif %}
          brightness_max: >-
            {{ state_attr("binary_sensor.bf1_den_lamp3_autobrightness", "brightness") | int(100) + 4 }}
          brightness_min: >-
            {{ state_attr("binary_sensor.bf1_den_lamp3_autobrightness", "brightness") | int(100) - 4 }}

      - unique_id: "42bff3a4-7a1f-425e-859e-5ba054684ed6"
        name: "BF1: Den Lamp3 - Autocolor"
        state: >-
          {{ (
               states("sensor.global_dummy_light_color_temperature") | int(367) ) <
               ( state_attr("binary_sensor.bf1_den_lamp3_autocolor", "color_temp_max")
               | int(382) )
             and ( states("sensor.global_dummy_light_color_temperature") | int(367) ) >
             ( state_attr("binary_sensor.bf1_den_lamp3_autocolor", "color_temp_min")
             | int(352))
             }}
        attributes:
          color_temp: >-
            {% if state_attr("light.bf1_den_lamp3", "color_temp") is number %}
              {{ state_attr("light.bf1_den_lamp3","color_temp") | int(367) }}
            {% else %}
              {{ ( states("sensor.global_dummy_light_color_temperature") | int(367) ) }}
            {% endif %}
          color_temp_max: >-
            {{ state_attr("binary_sensor.bf1_den_lamp3_autocolor", "color_temp") | int(100) + 15 }}
          color_temp_min: >-
            {{ state_attr("binary_sensor.bf1_den_lamp3_autocolor", "color_temp") | int(100) - 15 }}

  - sensor:
      # ============================================================================================
      #
      # BF1: Den (Whole Room) Sensors
      #
      # ============================================================================================
      - unique_id: "70e951ee-3ef0-488c-b426-6a77326b904a"
        name: "BF1: Den Color"
        state: "{{ state_attr('light.bf1_den', 'xy_color') }}"

      # ============================================================================================
      #
      # BF1: Den CF1 Sensors
      #
      # ============================================================================================
      - unique_id: "337ca313-fe2a-48b6-a6f4-ddfe11fec06f"
        name: "BF1: Den CF1 Color"
        state: "{{ state_attr('light.bf1_den_cf1', 'xy_color') }}"

      # ============================================================================================
      #
      # BF1: Den CF2 Sensors
      #
      # ============================================================================================
      - unique_id: "0a8b5637-0b31-4e51-86d8-a9b27c8f74dc"
        name: "BF1: Den CF2 Color"
        state: "{{ state_attr('light.bf1_den_cf2', 'xy_color') }}"

      # ============================================================================================
      #
      # BF1: Den Lamp1 Sensors
      #
      # ============================================================================================
      - unique_id: "764b1552-4941-4907-a408-f7e6048a01f8"
        name: "BF1: Den Lamp1 Color"
        state: "{{ state_attr('light.bf1_den_lamp1', 'xy_color') }}"

      # ============================================================================================
      #
      # BF1: Den Lamp2 Sensors
      #
      # ============================================================================================
      - unique_id: "92495cab-1e50-440b-936b-b22f96b7939a"
        name: "BF1: Den Lamp2 Color"
        state: "{{ state_attr('light.bf1_den_lamp2', 'xy_color') }}"

      # ============================================================================================
      #
      # BF1: Den Lamp3 Sensors
      #
      # ============================================================================================
      - unique_id: "38deaa3d-efea-4cdf-824d-deb2cd580039"
        name: "BF1: Den Lamp3 Color"
        state: "{{ state_attr('light.bf1_den_lamp3', 'xy_color') }}"
